{"version":3,"sources":["components/Navbar/NavbarElements.js","assets/complex-logo.png","components/Navbar/index.js","pages/landing.js","pages/about.js","pages/learn.js","assets/logo-bg.png","assets/strawberry-slider-big.png","assets/logo-bg-off.png","pages/contact.js","pages/create.js","pages/gallery.js","pages/browse.js","assets/paper.PNG","components/Wing/index.js","components/Swan/index.js","models/VaseStore.js","models/PxModel.js","models/RowModel.js","models/DrawingSectionModel.js","models/ColoringForm.js","models/BasketStore.js","models/FigurineStore.js","models/SwanStore.js","models/RootStore.js","models/RootStoreContext.js","pages/create-swan.js","components/Vase/index.js","pages/create-vase.js","components/Basket/index.js","pages/create-basket.js","components/Figurine/index.js","pages/create-figurine.js","components/ResultVase/index.js","components/ResultFigurine/index.js","components/ResultBasket/index.js","assets/upper-banner.png","assets/lower-banner.png","pages/result.js","pages/index.js","components/Pixel/index.js","components/SpecialPixel/index.js","components/Row/index.js","components/SpecialRow/index.js","components/UntrackedPixel/index.js","components/UntrackedRow/index.js","components/TriangleSection/index.js","components/DrawingSection/index.js","components/OrigamiObject/index.js","pages/colouring.js","components/App.jsx","index.js"],"names":["Nav","styled","nav","NavLink","Link","PlainLink","NavMenu","FaBars","div","NavBtn","NavBtnLink","Navbar","to","style","height","margin","float","src","logo","alt","letterSpacing","marginRight","color","Landing","display","justifyContent","alignItems","About","Learn","Contact","backgroundImage","bg","backgroundPosition","className","straw","href","target","Create","background","flexDirection","fontSize","Gallery","Browse","observer","props","vertices","purpose","my_vertices","useMemo","map","v","THREE","faces","push","onUpdate","geometry","computeFaceNormals","computeVertexNormals","i","length","x","y","z","verticesNeedUpdate","normalsNeedUpdate","swanStore","result","image","texture","grid","load","swan_pts","swanBodyPts","swan_body","args","Math","PI","side","specular","shininess","bottom","diameter","height_scale","rim_mesh","position","rotation","bottom_scale","default_color","getX","angle","radius","cos","getY","sin","bottomRad","top_scale","midRad","midHeight","topHeight","big_vertices","F_vertices","big_F_vertices","L_vertices","temp","B_vertices","y_pos_wing","wings","one_wing","shape","param","t","moveTo","lineTo","quadraticCurveTo","rad","depth","extrudeSettings","steps","bevelEnabled","offset","neck_mesh","diameter_marker","useState","x_rot","changeXrot","y_rot","changeYrot","z_rot","changeZrot","dist","changeDist","handleKeyDown","event","key","max","min","preventDefault","React","useEffect","window","addEventListener","removeEventListener","rim","getCurvePointsNew","_pts","tension","numOfSegments","t1x","t2x","t1y","t2y","c1","c2","c3","c4","st","res","first_x","first_y","last_x","last_y","unshift","pow","VaseStore","types","model","cm","dtop","d3","d2","d1","dbottom","dtop_h","d3_h","d2_h","d1_h","dbottom_h","top_rim","bottom_rim","bottom_disk","scale_h","tot_rows_per_section","optional","array","number","subsections","textures","string","modelDimensions","actions","self","update_top_rim","update_bottom_rim","update_bottom_disk","update_units","units","update_height","update_dtop","update_d3","update_d2","update_d1","update_dbottom","update_d_heights","vals","storePic","picData","setDefaultColor","getDimensions","maxWidth","updateCurvedPts","broken","s_dtop_h","s_dbottom_h","scale_factor","s_dtop","s_dbottom","s_d1","s_d1_h","s_d2","s_d2_h","s_d3","s_d3_h","myPoints","points","new_pts","h","r","section_pts","broken_pts","broken_pts_three","lo","hi","slice","curr_idx","j","slice_size","round","k","views","PxModel","pixelColor","oldColor","canChangeColor","setPixelColor","col","setOldColor","setCanChangeColor","val","RowModel","rowData","width","displayRowNum","addPx","create","setOffset","setWidth","setDisplayRowNum","DrawingSectionModel","drawingSectionData","increasing","addRow","setWidthHeight","w","setIncreasing","DEFAULT_PNG","fileName","type","html2CanvasOptions","ColoringForm","selectedColor","defaultColor","oldDefault","clear","mode","canvasPic","coloringFormData","setColor","setModel","clearAll","unsetClear","setMode","exportComponent","node","current","Error","element","ReactDOM","findDOMNode","html2canvas","scrollY","useCORS","imageTimeout","backgroundColor","then","canvas","toDataURL","saveDiagram","uri","filename","link","document","createElement","download","body","appendChild","click","removeChild","open","saveAs","addDrawingSection","getCurvePointsBasket","BasketStore","lid","top_handle","side_handles","curved_bottom","update_top_handle","update_side_handles","update_lid","update_diameter","update_curved_bottom","sectionNum","s_diameter","s_diameter_h","FigurineStore","arms","ears","body_scale","body_height","tot_rows_head","update_ears","update_arms","d","tot_theta_len","theta_start","theta_len","divisions","s_dtop_bottom","getCurvePointsFigurine","SwanStore","update_wings","update_rim","s_bottom","s_top","getCurvePointsSwan","RootStore","vaseStore","coloringFormStore","basketStore","figStore","RootStoreContext","createContext","RootStoreProvider","Provider","useStores","useContext","railStyle","borderRadius","Handle","handle","id","value","percent","getHandleProps","left","marginLeft","marginTop","zIndex","textAlign","cursor","fontFamily","slider_diameter","rootStyle","domain","step","values","getRailProps","handles","rim_switch","onChange","options","label","selectedBackgroundColor","initialSelectedIndex","fontColor","optionBorderRadius","wings_switch","units_switch","camera","fov","aspect","near","far","intensity","overflow","marginBottom","vase","top_rim_mesh","bottom_rim_mesh","bottom_disk_mesh","getInputMarker","dtop_marker","dbottom_marker","d1_marker","d2_marker","d3_marker","sliderStyle","MultiHandle","sliderHeight","slider_dtop","slider_d3","slider_d2","slider_d1","slider_dbottom","dSlider","top_rim_switch","bottom_rim_switch","bottom_disk_switch","phi_len","CustomCircleCurve","scale","ty","tz","multiplyScalar","this","tube_scale","path","tube_rad","percent_lid","rad_lid","lid_dist","tan","deco_r","deco_dist","percent_sphere","rad_bottom","bottom_dist","lid_switch","bottom_switch","top_handle_switch","side_handles_switch","head_rad","head","bunny_ears","cat_ears","sphere_ears","bear_ears","tx","y_pos","half_side_len","bshape","ear_rad","arm_rad","x_pos","arms_switch","ears_switch","indexOf","itemsRef","useRef","len","_","ref","el","texture_body","divs","getBrokenHeadPts","broken_head","modelStore","canvasRef","console","log","context","getContext","px_size","defaultCol","sec_width","sec_height","fillStyle","fillRect","last_idx","c","ResultFigurine","upperbanner","onClick","size","lowerbanner","Home","component","CreateSwan","CreateVase","CreateBasket","CreateFigurine","Result","formObject","applyColor","onMouseEnter","onMouseLeave","onMouseOver","borderColor","substring","parseInt","borderWidth","SpecialPixel","on","num","markerNum","rounded","paddingLeft","paddingRight","pixels","SpecialRow","specialTop","specialBottom","my_dict","count","numPx","elevation","firstRowDisplay","panelRef","rows","var_offset","displayNum","swanUpper","wing1","wing2","chest","back","dimensions","objectRef","Array","fill","sTopCurr","sBottomCurr","curr","diff","distribute","remainder","spacing","0","1","2","floor","spacing_arr","idx","sections","showInfo","setShowInfo","showPicker","setShowPicker","showPickerDefault","setShowPickerDefault","colorPaletteIdx","setColorIdx","dColorPaletteIdx","setDColorIdx","colorPalette","setColorPalette","dColorPalette","setDColorPalette","diagramRef","myDimensions","absolute","myHeight","innerHeight","colorPicker","colors","triangle","onChangeComplete","hex","search","toString","toUpperCase","includes","new_palette","defaultColorPicker","paintByPixel","sprayPaint","logoObject","exportComponentAsPNG","backButton","nextButton","delay","clickAction","replace","info","innerZ","overflowX","overflowY","rootStore","App","Component","render","getElementById"],"mappings":"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","file":"static/js/main.fcea73ac.chunk.js","sourcesContent":["import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #D14240;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  // padding: 0.5rem calc((100vw - 4000px) / 2);\r\n  padding: 0.5rem;\r\n  z-index: 10;\r\n  border-radius: 30px 30px 30px 30px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-start; */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  // height: 70%;\r\n  cursor: pointer;\r\n  border-radius: 30px;\r\n  margin: 5px;\r\n  border-style: solid; \r\n  border-color: #D14240;\r\n\r\n  &:hover {\r\n    // transition: all 0.2s ease-in-out;\r\n    background: #FFE7EC;\r\n    color: red;\r\n    // height: 100%;\r\n    border-style: solid;\r\n    border-color: #FFE7EC;\r\n  }\r\n\r\n  &.active {\r\n    color: red;\r\n    background: #FFE7EC;\r\n    // height: 100%;\r\n    border-radius: 40px;\r\n    border-style: solid;\r\n    border-color: #FFE7EC;\r\n  }\r\n`;\r\n\r\nexport const PlainLink = styled(Link)`\r\n  text-decoration:none;\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n  /* Second Nav */\r\n  /* margin-right: 24px; */\r\n\r\n  /* Third Nav */\r\n  /* width: 100vw;\r\n  white-space: nowrap; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  // margin-right: 24px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-end;\r\n  width: 80vw; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 30px;\r\n  background: #256ce1;\r\n  // padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  width: 80px;\r\n  height: 50px;\r\n\r\n\r\n  /* Second Nav */\r\n  // margin-left: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #D14240;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/complex-logo.268ab665.png\";","import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink, \r\n  PlainLink\r\n} from './NavbarElements';\r\nimport logo from \"../../assets/complex-logo.png\"\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <PlainLink to='/'><img style={{height: 60, margin: 20, float: 'left'}}src={logo} alt='logo' /></PlainLink>\r\n        <PlainLink to='/'>\r\n          <p style ={{letterSpacing: 3, marginRight: 100, color:\"white\", float: 'left'}}>3d-o</p>\r\n        </PlainLink>\r\n        {/* <Bars /> */}\r\n        <NavMenu>\r\n          <NavLink to='/about'>\r\n            <p style ={{letterSpacing: 2}}>about</p>\r\n          </NavLink>\r\n          <NavLink to='/learn' >\r\n            <p style ={{letterSpacing: 2}}>learn</p>\r\n          </NavLink>\r\n          <NavLink to='/create'>\r\n            <p style ={{letterSpacing: 2}}>create</p>\r\n          </NavLink>\r\n          <NavLink to='/browse'>\r\n            <p style ={{letterSpacing: 2}}>browse</p>\r\n          </NavLink>\r\n          <NavLink to='/gallery'>\r\n            <p style ={{letterSpacing: 2}}>gallery</p>\r\n          </NavLink>\r\n          <NavLink to='/contact'>\r\n            <p style ={{letterSpacing: 2}}>contact</p>\r\n          </NavLink>\r\n          {/* Second Nav */}\r\n          {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\r\n        </NavMenu>\r\n        {/* <NavBtn>\r\n          <NavBtnLink to='/signin'>Sign In</NavBtnLink>\r\n        </NavBtn> */}\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Landing</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>About</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst Learn = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Learn</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Learn;","export default __webpack_public_path__ + \"static/media/logo-bg.1d8d140f.png\";","export default __webpack_public_path__ + \"static/media/strawberry-slider-big.9374e4ca.png\";","export default __webpack_public_path__ + \"static/media/logo-bg-off.4d8579aa.png\";","import React from 'react';\r\nimport bg from \"../assets/logo-bg.png\"\r\nimport bgOff from \"../assets/logo-bg-off.png\"\r\nimport straw from \"../assets/strawberry-slider-big.png\"\r\nimport \"./create-vase.css\"\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '486px',\r\n        backgroundImage: `url(${bg})`, \r\n        backgroundPosition: \"50%\"\r\n      }}\r\n    >\r\n      <div className=\"info-box\" >\r\n        <img src={straw} className =\"straw-l\"/>\r\n        <img src={straw} className =\"straw-m\"/>\r\n        <img src={straw} className =\"straw-r\"/>\r\n        <p className = \"app-name\">3d-o<br/>engineering x art</p>\r\n        <p className = \"name\">— lina nguyen —</p>\r\n        <div className=\"left\">\r\n          <a href=\"/\" target=\"_blank\" className=\"link\">linkedin</a>\r\n          <br/>\r\n          <a href=\"/\" target=\"_blank\" className=\"link\">resume</a>\r\n        </div>\r\n        <div className=\"right\">\r\n          <a href=\"/\" target=\"_blank\" className=\"link\">github</a>\r\n          <br/>\r\n          <a href=\"/\" target=\"_blank\" className=\"link\">email</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\n\r\nconst Create = () => {\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          // alignItems: 'center',\r\n          height: '25vh',\r\n          background: '#bab', \r\n          margin: '30px'\r\n        }}\r\n      >\r\n        <h1>I want to make a ... </h1>\r\n      </div>\r\n      <div \r\n        style={{\r\n          flexDirection: 'row',\r\n          height: '25vh'\r\n        }}\r\n      >\r\n        <a style={{background: '#bfb', fontSize: '30px', margin: '30px'}} href=\"/create-swan\"> Swan </a>\r\n        <a style={{background: '#bcb', fontSize: '30px', margin: '30px'}} href=\"/create-vase\"> Vase </a>\r\n        <a style={{background: '#bdb', fontSize: '30px', margin: '30px'}} href=\"/create-basket\"> Basket </a>\r\n        <a style={{background: '#beb', fontSize: '30px', margin: '30px'}} href=\"/create-figurine\"> Figurine </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;","import React from 'react';\r\n\r\nconst Gallery = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Gallery</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;","import React from 'react';\r\n\r\nconst Browse = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Browse</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Browse;","export default __webpack_public_path__ + \"static/media/paper.2a44f726.PNG\";","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Wing = (props) => {\r\n    const {vertices, purpose} = props\r\n    const my_vertices = useMemo(() => vertices.map(v => new THREE.Vector3(...v)), [])\r\n\r\n    const faces = []\r\n    if (purpose == \"wing\"){\r\n        faces.push(\r\n            new THREE.Face3(17, 8, 7),\r\n            new THREE.Face3(16, 17, 7),\r\n            new THREE.Face3(16, 7, 6),\r\n            new THREE.Face3(15, 16, 6),\r\n            new THREE.Face3(15, 6, 5),\r\n            new THREE.Face3(14, 15, 5),\r\n            new THREE.Face3(14, 5, 4),\r\n            new THREE.Face3(13, 14, 4),\r\n            new THREE.Face3(13, 4, 3),\r\n            new THREE.Face3(12, 13, 3),\r\n            new THREE.Face3(12, 3, 2),\r\n            new THREE.Face3(11, 12, 2),\r\n            new THREE.Face3(11, 2, 1),\r\n            new THREE.Face3(10, 11, 1),\r\n            new THREE.Face3(10, 1, 0),\r\n            new THREE.Face3(9, 10, 0),\r\n            // top row \r\n            new THREE.Face3(18, 17, 16),\r\n            new THREE.Face3(18, 16, 15),\r\n            new THREE.Face3(18, 15, 14),\r\n            new THREE.Face3(18, 14, 13),\r\n            new THREE.Face3(18, 13, 12),\r\n            new THREE.Face3(18, 12, 11),\r\n            new THREE.Face3(18, 11, 10),\r\n            new THREE.Face3(18, 10, 9),\r\n        )\r\n    }\r\n    else if (purpose == \"front-back\"){\r\n        faces.push(\r\n            new THREE.Face3(5, 4, 3),\r\n            new THREE.Face3(5, 3, 2),\r\n            new THREE.Face3(5, 2, 1),\r\n            new THREE.Face3(5, 1, 0),\r\n        )\r\n    }\r\n\r\n    else if (purpose == \"one-wing\"){\r\n        faces.push(\r\n            new THREE.Face3(9, 8, 7),\r\n            new THREE.Face3(9, 7, 6),\r\n            new THREE.Face3(9, 6, 5),\r\n            new THREE.Face3(9, 5, 4),\r\n            new THREE.Face3(9, 4, 3),\r\n            new THREE.Face3(9, 3, 2),\r\n            new THREE.Face3(9, 2, 1),\r\n            new THREE.Face3(9, 1, 0),\r\n        )\r\n    }\r\n\r\n    // const uvs = [[\r\n    //     // front\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // right\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // back\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // left\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // top\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // bottom\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    // ]]\r\n\r\n    function update(geometry){\r\n        geometry.computeFaceNormals()\r\n        geometry.computeVertexNormals();\r\n        for (let i = 0; i < geometry.vertices.length; i++){\r\n            geometry.vertices[i].x = vertices[i][0]\r\n            geometry.vertices[i].y = vertices[i][1]\r\n            geometry.vertices[i].z = vertices[i][2]\r\n        }\r\n        geometry.verticesNeedUpdate = true\r\n        geometry.normalsNeedUpdate = true;\r\n    }\r\n\r\n    return (\r\n        // <geometry vertices={my_vertices} faces={faces} faceVertexUVs={uvs} onUpdate={update}/>\r\n        <geometry vertices={my_vertices} faces={faces} onUpdate={update}/>\r\n    )\r\n  }\r\n\r\nexport default observer(Wing);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\nimport Wing from \"../Wing\"\r\n\r\nconst Swan = (props) => {\r\n    const {swanStore, result} = props\r\n    const image = result ? swanStore.texture : grid\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(image), []) \r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const swan_pts = swanStore.swanBodyPts()\r\n\r\n    const swan_body = \r\n    <group>\r\n        <mesh >\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n        </mesh>\r\n        <mesh>\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const bottom = swanStore.diameter * swanStore.height_scale * 0.8 * -1\r\n    const rim_mesh = <mesh position = {[0,bottom-0.1,0]} rotation = {[1.57,0,0]}> \r\n    <torusGeometry args={[(swanStore.diameter * swanStore.bottom_scale/2)+0.1, swanStore.diameter/70, 10, 50]}/>\r\n    <meshPhongMaterial color={result? swanStore.default_color : \"#FF7E98\"} />\r\n    </mesh>\r\n\r\n    function getX(angle, radius){\r\n        return  radius * Math.cos(angle)\r\n    }\r\n\r\n    function getY(angle, radius){\r\n        return radius * Math.sin(angle)\r\n    }\r\n\r\n    const bottomRad = swanStore.diameter * swanStore.top_scale * 0.5\r\n    const midRad = swanStore.diameter * swanStore.top_scale * 0.5 * 0.73\r\n    const midHeight = swanStore.diameter * swanStore.height_scale * 1.7 * 0.5\r\n    const topHeight = swanStore.diameter * swanStore.height_scale * 1.9\r\n\r\n    const vertices =\r\n    [\r\n        // bottom row\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [getX(Math.PI/3.7, bottomRad), 0, getY(Math.PI/3.7, bottomRad)],  // 1\r\n        [getX(Math.PI/6, bottomRad), 0, getY(Math.PI/6, bottomRad)],  // 2\r\n        [getX(Math.PI/12, bottomRad), 0, getY(Math.PI/12, bottomRad)],  // 3\r\n        [getX(0, bottomRad), 0, getY(0, bottomRad)],  // 4\r\n        [getX(Math.PI/12, bottomRad), 0, -getY(Math.PI/12, bottomRad)],  // 5\r\n        [getX(Math.PI/6, bottomRad), 0, -getY(Math.PI/6, bottomRad)],  // 6\r\n        [getX(Math.PI/3.7, bottomRad), 0, -getY(Math.PI/3.7, bottomRad)],  // 7\r\n        [getX(Math.PI/2.8, bottomRad), 0, -getY(Math.PI/2.8, bottomRad)],  // 8\r\n        // middle row\r\n        [getX(Math.PI/2.8, midRad), midHeight, getY(Math.PI/2.8, midRad)],  // 9\r\n        [getX(Math.PI/3.7, midRad), midHeight, getY(Math.PI/3.7, midRad)],  // 10\r\n        [getX(Math.PI/6, midRad), midHeight, getY(Math.PI/6, midRad)],  // 11\r\n        [getX(Math.PI/12, midRad), midHeight, getY(Math.PI/12, midRad)],  // 12\r\n        [getX(0, midRad), midHeight, getY(0, midRad)],  // 13\r\n        [getX(Math.PI/12, midRad), midHeight, -getY(Math.PI/12, midRad)],  // 14\r\n        [getX(Math.PI/6, midRad), midHeight, -getY(Math.PI/6, midRad)],  // 15\r\n        [getX(Math.PI/3.7, midRad), midHeight, -getY(Math.PI/3.7, midRad)],  // 16\r\n        [getX(Math.PI/2.8, midRad), midHeight, -getY(Math.PI/2.8, midRad)],  // 17\r\n        // heights\r\n        [bottomRad/6, topHeight, 0]  // 18\r\n    ];\r\n\r\n    const big_vertices = \r\n    [\r\n        [-getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 0\r\n        [-getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 1\r\n        [-getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 2\r\n        [-getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 3        \r\n        [getX(Math.PI/2, bottomRad), 0, -getY(Math.PI/2, bottomRad)],  // 4\r\n        [getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 5  \r\n        [getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 6\r\n        [getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 7\r\n        [getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 8\r\n        [0, topHeight*1.1, -bottomRad*1.25]  // 9\r\n    ];\r\n\r\n    const F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [-getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 3\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 4\r\n        [0, topHeight/3, bottomRad/1.3]  // 5\r\n    ];\r\n\r\n    const big_F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 0\r\n        [-getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 3\r\n        [getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 4\r\n        [0, topHeight/1.7, bottomRad/1.8]  // 5\r\n    ];\r\n\r\n    const L_vertices = []\r\n    for (let i = 0; i < vertices.length; i++){\r\n        let temp = []\r\n        temp.push(-1 * vertices[i][0],vertices[i][1],vertices[i][2])\r\n        L_vertices.push(temp)\r\n    }\r\n\r\n    const B_vertices = []\r\n    for (let i = 0; i < F_vertices.length-1; i++){\r\n        let temp = []\r\n        temp.push(F_vertices[i][0],F_vertices[i][1], -1 * F_vertices[i][2])\r\n        B_vertices.push(temp)\r\n    }\r\n    B_vertices.push([0, topHeight/4, -bottomRad * 1.1])\r\n\r\n    const y_pos_wing = swanStore.diameter * swanStore.height_scale\r\n    const wings = \r\n    <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const one_wing = <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const shape = useMemo( () => new THREE.Shape(), [swanStore.diameter]);\r\n    const param = swanStore.diameter * 0.3\r\n    const t = param * 0.4\r\n    shape.moveTo(0, -param*1.3);\r\n    shape.lineTo(param*0.9, 0)\r\n    shape.quadraticCurveTo(param + param/3, param*1.5/2,param, param * 1.4)\r\n    shape.quadraticCurveTo(param/2, param * 1.9, -param/3,param)\r\n    shape.lineTo(-param/2.5, param - (1.5*t))\r\n    shape.quadraticCurveTo(param/2 , (param * 1.9) - t, param -t/1.5 , (param * 1.5) - t/1.5)\r\n    shape.quadraticCurveTo((param + param/3.5) -t/1.5, (param*1.5/2) + t/1.5, param -t/1.5, t/1.5)\r\n    \r\n    const depth = param/6\r\n\r\n    const extrudeSettings = {\r\n        steps: 100,  \r\n        depth: depth,  \r\n        bevelEnabled: false,   \r\n      };\r\n      \r\n\r\n    const offset = swanStore.diameter * swanStore.height_scale + (param*1.3) + ((topHeight/3) * 0)\r\n    const neck_mesh = <mesh position={[-depth/2,offset,(bottomRad/1)]} rotation={[0, Math.PI/2, 0]}>\r\n        <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n        <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n    </mesh>\r\n\r\n\r\n    const diameter_marker = getInputMarker((swanStore.diameter/2) + 0.1, 0)\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            {swan_body}\r\n            {!swanStore.wings && one_wing}\r\n            {swanStore.wings && wings}\r\n            {!result && diameter_marker}\r\n            {swanStore.rim && rim_mesh}\r\n            {neck_mesh}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Swan);","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsNew(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[8]\r\n    const last_y = _pts[9]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(y, 0.5));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction getCurvePoints(pts, tension, isClosed, numOfSegments) {\r\n\r\n    // use input value if provided, or use a default value   \r\n    tension = (typeof tension != 'undefined') ? tension : 0.5;\r\n    isClosed = isClosed ? isClosed : false;\r\n    numOfSegments = numOfSegments ? numOfSegments : 16;\r\n\r\n    var _pts = [], res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    // clone array so we don't change the original\r\n    //\r\n    _pts = pts.slice(0);\r\n\r\n    // The algorithm require a previous and next point to the actual point array.\r\n    // Check if we will draw closed or open curve.\r\n    // If closed, copy end points to beginning and first points to end\r\n    // If open, duplicate first points to befinning, end points to end\r\n    if (isClosed) {\r\n        _pts.unshift(pts[pts.length - 1]);\r\n        _pts.unshift(pts[pts.length - 2]);\r\n        _pts.unshift(pts[pts.length - 1]);\r\n        _pts.unshift(pts[pts.length - 2]);\r\n        _pts.push(pts[0]);\r\n        _pts.push(pts[1]);\r\n    }\r\n    else {\r\n        _pts.unshift(pts[1]);   //copy 1. point and insert at beginning\r\n        _pts.unshift(pts[0]);\r\n        _pts.push(pts[pts.length - 2]); //copy last point and append\r\n        _pts.push(pts[pts.length - 1]);\r\n    }\r\n\r\n    // ok, lets start..\r\n\r\n    // 1. loop goes through point array\r\n    // 2. loop goes through each segment between the 2 pts + 1e point before and after\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(y);\r\n\r\n        }\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nconst VaseStore = types\r\n  .model(\"Vase\", {\r\n    cm: false,\r\n    dtop: 20,\r\n    d3: 10, \r\n    d2: 10, \r\n    d1: 35,\r\n    dbottom: 20, \r\n    dtop_h: 100, \r\n    d3_h: 90, \r\n    d2_h: 70, \r\n    d1_h: 50, \r\n    dbottom_h: 0, \r\n    height: 50,\r\n    top_rim: false, \r\n    bottom_rim: true, \r\n    bottom_disk: true, \r\n    scale_h: 36,\r\n    default_color: \"#FFFFFF\",\r\n    tot_rows_per_section: types.optional(types.array(types.number), [15,9,10,10,10]), // bottom to top \r\n    subsections: types.optional(types.array(types.array(types.number)),[[5,4],[3,2],[1],[0]]), \r\n    // vase has 4 sections, each may be made of 1+ drawing sections // bottom to top\r\n    // it's numbered like that so you can refer to the corresponding section in modelDimensions\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10], [53, 10],[40,10],[28,9], [16,10], [24,5]]), // top to bottom \r\n  })\r\n  .actions(self => ({\r\n    update_top_rim(top_rim){\r\n        self.top_rim = top_rim\r\n    },\r\n    update_bottom_rim(bottom_rim){\r\n        self.bottom_rim = bottom_rim\r\n    },\r\n    update_bottom_disk(bottom_disk){\r\n        self.bottom_disk = bottom_disk\r\n    },\r\n    update_units(units){\r\n        self.cm = units\r\n    },\r\n    update_height(height){\r\n        self.height = height\r\n    }, \r\n    update_dtop(dtop){\r\n        self.dtop = dtop\r\n    }, \r\n    update_d3(d3){\r\n        self.d3 = d3\r\n    }, \r\n    update_d2(d2){\r\n        self.d2 = d2\r\n    }, \r\n    update_d1(d1){\r\n        self.d1 = d1\r\n    }, \r\n    update_dbottom(dbottom){\r\n        self.dbottom = dbottom\r\n    },\r\n    update_d_heights(vals){\r\n        self.d3_h = vals[3]\r\n        self.d2_h = vals[2]\r\n        self.d1_h = vals[1]\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n        // console.log(picData)\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getDimensions() {\r\n        self.maxWidth = 53 // un hard code\r\n        return self.modelDimensions\r\n      },\r\n    updateCurvedPts(broken=false){\r\n        const s_dtop_h = self.scale_h/2\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n        const scale_factor = self.scale_h/self.height\r\n    \r\n        const s_dtop = self.dtop * scale_factor\r\n        const s_dbottom = self.dbottom * scale_factor\r\n    \r\n        const s_d1 = self.d1 * scale_factor\r\n        const s_d1_h = (self.d1_h/100) * self.scale_h - s_dtop_h\r\n    \r\n        const s_d2 = self.d2 * scale_factor\r\n        const s_d2_h = (self.d2_h/100) * self.scale_h - s_dtop_h\r\n    \r\n        const s_d3 = self.d3 * scale_factor\r\n        const s_d3_h = (self.d3_h/100) * self.scale_h - s_dtop_h\r\n\r\n        var myPoints = [s_dbottom_h,s_dbottom/2, s_d1_h,s_d1/2,s_d2_h,s_d2/2, s_d3_h,s_d3/2, s_dtop_h,s_dtop/2]; \r\n        var tension = 0.4\r\n        var numOfSegments = 6\r\n        let points = [];\r\n        const new_pts = getCurvePointsNew(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        if (!broken) return points\r\n        else{\r\n            let section_pts = []\r\n            let broken_pts = []\r\n            let broken_pts_three = []\r\n            let lo = 0 \r\n            let hi = 2\r\n            while (hi+3 < new_pts.length){\r\n                if (new_pts[hi] == new_pts[hi+2] && new_pts[hi+1] == new_pts[hi+3]){\r\n                    const temp = new_pts.slice(lo,hi+2)\r\n                    section_pts.push(temp)\r\n                    lo = hi + 2\r\n                }\r\n                hi += 2\r\n            }\r\n            section_pts.push(new_pts.slice(lo,new_pts.length))\r\n            for (let i=0; i<4; i+=1){ //section_pts.length = 4\r\n                let curr_idx = 0\r\n                for (let j=0; j<self.subsections[i].length; j+=1){\r\n                    if (self.subsections[i].length > 1){\r\n                        // console.log(self.modelDimensions[self.subsections[i][j]][1])\r\n                        let slice_size = Math.round((self.modelDimensions[self.subsections[i][j]][1] / self.tot_rows_per_section[i]) * (section_pts[i].length/2))\r\n                        slice_size = slice_size * 2\r\n                        const slice = section_pts[i].slice(curr_idx,curr_idx + slice_size+2)\r\n                        curr_idx += slice_size\r\n                        broken_pts.push(slice)\r\n                    } \r\n                    else {\r\n                        broken_pts.push(section_pts[i])\r\n                    }\r\n                }\r\n            }\r\n            for(let j=0; j<broken_pts.length; j+= 1){\r\n                let temp = []\r\n                for(let k = 0; k < broken_pts[j].length; k += 2){\r\n                    const h = broken_pts[j][k]\r\n                    const r = broken_pts[j][k+1]\r\n                    temp.push( new THREE.Vector2(r, h));\r\n                }\r\n                broken_pts_three.push(temp)\r\n            }\r\n            \r\n            return broken_pts_three\r\n        }\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default VaseStore;\r\n\r\nconst VaseContext = React.createContext();\r\n\r\nexport const VaseProvider = ({ children, store }) => {\r\n    return (\r\n      <VaseContext.Provider value={store}>{children}</VaseContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useVaseStore = () => React.useContext(VaseContext);\r\n\r\nexport const withVaseStore = (Component) => (props) => {\r\n    return <Component {...props} store={useVaseStore()} />;\r\n  };","import { types } from \"mobx-state-tree\";\r\n\r\nconst PxModel = types\r\n  .model(\"PxModel\", {\r\n    pixelColor: \"#FFFFFF\", \r\n    oldColor: \"#FFFFFF\", \r\n    canChangeColor: true\r\n  })\r\n  .actions(self => ({\r\n    setPixelColor(col){\r\n      self.pixelColor = col\r\n    }, \r\n    setOldColor(col){\r\n      self.oldColor = col\r\n    }, \r\n    setCanChangeColor(val){\r\n      self.canChangeColor = val\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default PxModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport PxModel from './PxModel'\r\n\r\nconst RowModel = types\r\n  .model(\"RowModel\", {\r\n    rowData: types.optional(types.array(PxModel), []),\r\n    offset: 0, \r\n    width: 0, \r\n    displayRowNum: 0,\r\n  })\r\n  .actions(self => ({\r\n    addPx(){\r\n      self.rowData.push(PxModel.create())\r\n    },\r\n    setOffset(val = 10.5){\r\n      self.offset = val\r\n    }, \r\n    setWidth(val){\r\n      self.width = val\r\n    }, \r\n    setDisplayRowNum(val){\r\n      self.displayRowNum = val\r\n    }\r\n  }))\r\n  .actions(self => ({ \r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default RowModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport RowModel from './RowModel'\r\n\r\nconst DrawingSectionModel = types\r\n  .model(\"DrawingSectionModel\", {\r\n    drawingSectionData: types.optional(types.array(RowModel), []),\r\n    width: 0, \r\n    height: 0, \r\n    increasing: false\r\n  })\r\n  .actions(self => ({\r\n    addRow(){\r\n      self.drawingSectionData.push(RowModel.create())\r\n    }, \r\n    setWidthHeight(w, h){\r\n      self.width = w\r\n      self.height = h \r\n    }, \r\n    setIncreasing(val){\r\n      self.increasing = val\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default DrawingSectionModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport html2canvas from 'html2canvas';\r\nimport DrawingSectionModel from './DrawingSectionModel'\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst fileType = {\r\n  PNG: 'image/png',\r\n  JPEG: 'image/jpeg',\r\n  PDF: 'application/pdf'\r\n};\r\n\r\nconst DEFAULT_PNG = {\r\n  fileName: 'my-3do-diagram.png',\r\n  type: fileType.PNG,\r\n  html2CanvasOptions: {}\r\n};\r\n\r\nconst saveAs = (uri, filename) => {\r\n  const link = document.createElement('a');\r\n\r\n  if (typeof link.download === 'string') {\r\n      link.href = uri;\r\n      link.download = filename;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n  } else {\r\n      window.open(uri);\r\n  }\r\n};\r\n\r\nconst exportComponentBak = (node, {\r\n  fileName, \r\n  type, \r\n  html2CanvasOptions, \r\n  pdfOptions\r\n}) => {\r\n  if(!node.current) {\r\n      throw new Error(\"'node' must be a RefObject\")\r\n  }\r\n\r\n  const element = ReactDOM.findDOMNode(node.current);\r\n  return html2canvas(element, {\r\n      scrollY: -window.scrollY,\r\n      useCORS: true,\r\n      ...html2CanvasOptions\r\n  }).then(canvas => {\r\n      console.log(canvas.toDataURL(type, 1.0))\r\n      // saveAs(canvas.toDataURL(type, 1.0), fileName);\r\n  });\r\n};\r\n\r\nconst exportComponentAsPNG = (node, parameters = {}) => exportComponentBak(node, {...DEFAULT_PNG, ...parameters});\r\n\r\nconst ColoringForm = types\r\n  .model(\"ColoringForm\", {\r\n    selectedColor: \"#FF0000\",\r\n    defaultColor: \"#FFFFFF\",\r\n    oldDefault: \"#FFFFFF\",\r\n    clear: false,\r\n    mode: false,\r\n    maxWidth: 53,\r\n    canvasPic: \"\",\r\n    model: \"vase\", // vase, swan, fig, basket\r\n    coloringFormData: types.optional(types.array(DrawingSectionModel), [])\r\n  })\r\n  .actions(self => ({\r\n    storePic(picData){\r\n      self.canvasPic = picData\r\n      return\r\n    }\r\n  }))\r\n  .actions(self => ({ \r\n    setColor(col){\r\n      self.clear = false\r\n      self.selectedColor = col\r\n    },\r\n    setModel(model){\r\n      self.model = model\r\n    },\r\n    setDefaultColor(col){\r\n      self.clear = false\r\n      self.oldDefault = self.defaultColor\r\n      self.defaultColor = col\r\n    },\r\n    clearAll(){\r\n      if (self.defaultColor == \"#FFFFFF\"){\r\n        self.oldDefault = \"#FFFFFE\" \r\n        self.defaultColor = \"#FFFFFE\"\r\n      }\r\n      else {\r\n        self.oldDefault = \"#FFFFFF\" \r\n        self.defaultColor = \"#FFFFFF\"\r\n      }\r\n      self.clear = true\r\n    }, \r\n    unsetClear(){\r\n      self.clear = false\r\n    },\r\n    setMode(val){\r\n      self.clear = false\r\n      self.mode = val\r\n    }, \r\n    exportComponent (node) {\r\n      if(!node.current) {\r\n          throw new Error(\"'node' must be a RefObject\")\r\n      }\r\n      const element = ReactDOM.findDOMNode(node.current);\r\n      return html2canvas(element, {\r\n          scrollY: -window.scrollY,\r\n          useCORS: true,\r\n          // ...html2CanvasOptions\r\n          imageTimeout: 0,\r\n          backgroundColor: \"#FFFFFF\"\r\n      }).then(canvas => {\r\n          // self.canvasPic = canvas.toDataURL(DEFAULT_PNG, 0.1)\r\n          self.storePic(canvas.toDataURL(DEFAULT_PNG, 0.1))\r\n      });\r\n    },\r\n    saveDiagram () {\r\n      saveAs(self.canvasPic, \"my-3do-diagram\")\r\n    },\r\n    addDrawingSection(){\r\n      self.coloringFormData.push(DrawingSectionModel.create())\r\n    }\r\n  }))\r\n  .views(self => ({\r\n    // status() {\r\n    //   return self.is_paid ? \"Paid\" : \"Not Paid\";\r\n    // }\r\n  }));\r\n\r\nexport default ColoringForm;\r\n","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsBasket(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst BasketStore = types\r\n  .model(\"Basket\", {\r\n    cm: false,\r\n    height: 20, \r\n    diameter: 34, \r\n    dtop: 20, \r\n    dbottom: 20,\r\n    top_rim: true, \r\n    bottom_rim: true, \r\n    lid: true, \r\n    top_handle: true, \r\n    side_handles: false, \r\n    scale_h: 15,\r\n    curved_bottom: true, \r\n    default_color: \"#FFFFFF\",\r\n    tot_rows_per_section: types.optional(types.array(types.number), [15,29]), // bottom to top \r\n    subsections: types.optional(types.array(types.array(types.number)),[[4,3],[2,1,0]]), \r\n    // basket has 2 sections, each may be made of 1+ drawing sections // bottom to top\r\n    // it's numbered like that so you can refer to the corresponding section in modelDimensions\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[53,10],[40,10],[28,9],[16,10],[24,5]]),\r\n  })\r\n  .actions(self => ({\r\n    update_top_rim(top_rim){\r\n        self.top_rim = top_rim\r\n    },\r\n    update_bottom_rim(bottom_rim){\r\n        self.bottom_rim = bottom_rim\r\n    },\r\n    update_top_handle(top_handle){\r\n        self.top_handle = top_handle\r\n    },\r\n    update_side_handles(side_handles){\r\n        self.side_handles = side_handles\r\n    },\r\n    update_lid(lid){\r\n        self.lid = lid \r\n    },\r\n    update_units(units){\r\n        self.cm = units\r\n    },\r\n    update_height(height){\r\n        self.height = height\r\n    }, \r\n    update_diameter(diameter){\r\n        self.diameter = diameter\r\n    }, \r\n    update_dtop(dtop){\r\n        self.dtop = dtop\r\n    }, \r\n    update_dbottom(dbottom){\r\n        self.dbottom = dbottom\r\n    }, \r\n    update_curved_bottom(val) {\r\n        self.curved_bottom = val\r\n    },\r\n    storePic(picData, sectionNum){\r\n        self.textures[sectionNum] = picData\r\n        // console.log(picData)\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getDimensions() {\r\n        self.maxWidth = 53\r\n        return self.modelDimensions\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    updateCurvedPts(broken=false){\r\n        const s_dtop_h = self.scale_h/2\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n        const scale_factor = self.scale_h/self.height\r\n    \r\n        const s_dtop = self.dtop * scale_factor\r\n        const s_dbottom = self.dbottom * scale_factor\r\n    \r\n        const s_diameter = self.diameter * scale_factor\r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_dbottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_dtop/2]; \r\n        var tension = 0.8\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsBasket(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        if (!broken) return points\r\n        else{\r\n            let section_pts = []\r\n            let broken_pts = []\r\n            let broken_pts_three = []\r\n            let lo = 0 \r\n            let hi = 2\r\n            while (hi+3 < new_pts.length){\r\n                if (new_pts[hi] == new_pts[hi+2] && new_pts[hi+1] == new_pts[hi+3]){\r\n                    const temp = new_pts.slice(lo,hi+2)\r\n                    section_pts.push(temp)\r\n                    lo = hi + 2\r\n                }\r\n                hi += 2\r\n            }\r\n            section_pts.push(new_pts.slice(lo,new_pts.length))\r\n            for (let i=0; i<2; i+=1){ //section_pts.length = 4\r\n                let curr_idx = 0\r\n                for (let j=0; j<self.subsections[i].length; j+=1){\r\n                    if (self.subsections[i].length > 1){\r\n                        // console.log(self.modelDimensions[self.subsections[i][j]][1])\r\n                        let slice_size = Math.round((self.modelDimensions[self.subsections[i][j]][1] / self.tot_rows_per_section[i]) * (section_pts[i].length/2))\r\n                        slice_size = slice_size * 2\r\n                        const slice = section_pts[i].slice(curr_idx,curr_idx + slice_size+2)\r\n                        curr_idx += slice_size\r\n                        broken_pts.push(slice)\r\n                    } \r\n                    else {\r\n                        broken_pts.push(section_pts[i])\r\n                    }\r\n                }\r\n            }\r\n            for(let j=0; j<broken_pts.length; j+= 1){\r\n                let temp = []\r\n                for(let k = 0; k < broken_pts[j].length; k += 2){\r\n                    const h = broken_pts[j][k]\r\n                    const r = broken_pts[j][k+1]\r\n                    temp.push( new THREE.Vector2(r, h));\r\n                }\r\n                broken_pts_three.push(temp)\r\n            }\r\n            \r\n            return broken_pts_three\r\n        }\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default BasketStore;\r\n\r\nconst BasketContext = React.createContext();\r\n\r\nexport const BasketProvider = ({ children, store }) => {\r\n    return (\r\n      <BasketContext.Provider value={store}>{children}</BasketContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useBasketStore = () => React.useContext(BasketContext);\r\n\r\nexport const withBasketStore = (Component) => (props) => {\r\n    return <Component {...props} store={useBasketStore()} />;\r\n  };","import { tryReference, types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsFigurine(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst FigurineStore = types\r\n  .model(\"Figurine\", {\r\n    cm: false,\r\n    diameter: 13,\r\n    arms: true, \r\n    ears: \"bear\",\r\n    body_scale: 0.7,\r\n    body_height: 0.35,\r\n    default_color: \"#FFFFFF\",\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    tot_rows_head: 33,\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[30,12],[40,11],[53,10],[40,10]]), // last = body\r\n  })\r\n  .actions(self => ({\r\n    update_ears(val){\r\n        self.ears = val\r\n    },\r\n    update_arms(val){\r\n        self.arms = val\r\n    },\r\n    update_units(units){\r\n        self.cm = units\r\n    }, \r\n    update_diameter(d){\r\n        self.diameter = d\r\n    }, \r\n    storePic(picData, sectionNum){\r\n        self.textures[sectionNum] = picData\r\n        // console.log(picData)\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getDimensions() {\r\n        self.maxWidth = 53\r\n        return self.modelDimensions\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getBrokenHeadPts(tot_theta_len){\r\n        let theta_start = 0 \r\n        let theta_len = 0\r\n        let divisions = []\r\n        for (let i = 0; i < self.modelDimensions.length-1; i++){\r\n            const num_rows = self.modelDimensions[i][1]\r\n            const ratio = num_rows/self.tot_rows_head\r\n            theta_len = ratio * tot_theta_len\r\n            divisions.push([theta_start, theta_len])\r\n            theta_start += theta_len\r\n        }\r\n        return divisions\r\n    },\r\n    updateCurvedPts(){\r\n        const s_dtop_h = self.diameter * self.body_height\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n\r\n        const s_dtop_bottom = self.diameter * self.body_scale\r\n\r\n        const s_diameter = self.diameter \r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_dtop_bottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_dtop_bottom/2]; \r\n        var tension = 0.65\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsFigurine(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        return points\r\n    },\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default FigurineStore;\r\n\r\nconst FigurineContext = React.createContext();\r\n\r\nexport const FigurineProvider = ({ children, store }) => {\r\n    return (\r\n      <FigurineContext.Provider value={store}>{children}</FigurineContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useFigurineStore = () => React.useContext(FigurineContext);\r\n\r\nexport const withFigurineStore = (Component) => (props) => {\r\n    return <Component {...props} store={useFigurineStore()} />;\r\n  };","import { tryReference, types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsSwan(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst SwanStore = types\r\n  .model(\"Swan\", {\r\n    cm: false,\r\n    diameter: 16,\r\n    body_height: 0.35,\r\n    top_scale: 1,\r\n    bottom_scale:0.6, \r\n    height_scale: 0.4,\r\n    default_color: \"#FFFFFF\", \r\n    wings: true, \r\n    rim: true,\r\n    texture: \"\", \r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10]]), // top to bottom \r\n  })\r\n  .actions(self => ({\r\n    update_units(units){\r\n        self.cm = units\r\n    }, \r\n    update_wings(val){\r\n        self.wings = val\r\n    },\r\n    update_rim(val){\r\n        self.rim = val\r\n    },\r\n    update_diameter(d){\r\n        self.diameter = d\r\n    }, \r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    storePic(picData){\r\n        self.texture = picData\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getDimensions() {\r\n        self.maxWidth = 53 // un hard code\r\n        return self.modelDimensions\r\n    },\r\n    swanBodyPts(){\r\n        const s_dtop_h = self.diameter * self.height_scale\r\n        const s_dbottom_h = -1 * s_dtop_h * 0.8\r\n\r\n        const s_bottom = self.diameter * self.bottom_scale\r\n        const s_top = self.diameter * self.top_scale\r\n\r\n        const s_diameter = self.diameter \r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_bottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_top/2]; \r\n        var tension = 0.65\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsSwan(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        return points\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default SwanStore;\r\n\r\nconst SwanContext = React.createContext();\r\n\r\nexport const SwanProvider = ({ children, store }) => {\r\n    return (\r\n      <SwanContext.Provider value={store}>{children}</SwanContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useSwanStore = () => React.useContext(SwanContext);\r\n\r\nexport const withSwanStore = (Component) => (props) => {\r\n    return <Component {...props} store={useSwanStore()} />;\r\n  };","import VaseStore from \"./VaseStore\"\r\nimport ColoringForm from \"./ColoringForm\"\r\nimport BasketStore from \"./BasketStore\"\r\nimport FigurineStore from \"./FigurineStore\"\r\nimport SwanStore from \"./SwanStore\"\r\nimport { types } from \"mobx-state-tree\";\r\n\r\n/**\r\n * A RootStore model.\r\n */\r\n// prettier-ignore\r\nconst RootStore = types.model(\"RootStore\").props({\r\n  vaseStore: types.optional(VaseStore, {}),\r\n  coloringFormStore: types.optional(ColoringForm, {}),\r\n  basketStore: types.optional(BasketStore, {}),\r\n  figStore: types.optional(FigurineStore, {}),\r\n  swanStore: types.optional(SwanStore, {}),\r\n});\r\n\r\nexport default RootStore;\r\n\r\n","import React, { createContext, useContext } from \"react\";\r\nimport RootStore from \"./RootStore\";\r\n\r\n/**\r\n * Create a context we can use to\r\n * - Provide access to our stores from our root component\r\n * - Consume stores in our screens (or other components, though it's\r\n *   preferable to just connect screens)\r\n */\r\n// const RootStoreContext = createContext();\r\n\r\n// /**\r\n//  * The provider our root component will use to expose the root store\r\n//  */\r\n// export const RootStoreProvider = RootStoreContext.Provider;\r\n\r\n// /**\r\n//  * A hook that screens can use to gain access to our stores, with\r\n//  * `const { someStore, someOtherStore } = useStores()`,\r\n//  * or less likely: `const rootStore = useStores()`\r\n//  */\r\n// export const useStores = () => useContext(RootStoreContext);\r\n\r\n//------------------------------------------------------------------\r\n\r\nconst RootStoreContext = React.createContext();\r\n\r\nexport const RootStoreProvider = RootStoreContext.Provider;\r\n\r\n\r\n// export const RootStoreProvider = ({ children, store }) => {\r\n//     return (\r\n//       <RootStoreContext.Provider value={store}>{children}</RootStoreContext.Provider>\r\n//     );\r\n// };\r\n\r\nexport const useStores = () => React.useContext(RootStoreContext);\r\n","import React, {useEffect} from \"react\";\r\n\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Swan from \"../components/Swan\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\n\r\nconst CreateSwan = () => {\r\n\r\n  const { swanStore, coloringFormStore } = useStores();\r\n\r\n  coloringFormStore.setModel(\"swan\")\r\n\r\n  const ears_options = [\r\n    {\r\n        label: \"∧ ∧\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"∧\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n    \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[1, 50]} step={1} mode={2} values={[swanStore.diameter]} onUpdate={(val) => swanStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\nconst rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_rim(val)}\r\n    options={options}\r\n    initialSelectedIndex={swanStore.rim ? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\nconst wings_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_wings(val)}\r\n    options={ears_options}\r\n    initialSelectedIndex={swanStore.wings? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => swanStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={swanStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 80], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '400px', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Swan swanStore={swanStore} result={false}/>\r\n          </Canvas>\r\n          <div className=\"containerCaption-fig\">\r\n            <div style={{height: 13}}/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 13}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <br/>\r\n          <p className=\"text\">body diameter</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {slider_diameter}\r\n          </div>\r\n          <br/>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">wings</p>\r\n          {wings_switch}\r\n          </div>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">rim</p>\r\n          {rim_switch}\r\n          </div>\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateSwan);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport {useFrame} from \"react-three-fiber\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n// import temp from \"../../assets/tempp.png\";\r\n\r\nconst Vase = (props) => {\r\n    const {vase} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []);\r\n    // texture.wrapS = THREE.MirroredRepeatWrapping;\r\n    // texture.wrapT = THREE.MirroredRepeatWrapping;\r\n    // texture.repeat.set(2, 2.6);\r\n\r\n    const s_dtop_h = vase.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = vase.scale_h/vase.height\r\n\r\n    const s_dtop = Math.max(1,vase.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,vase.dbottom * scale_factor)\r\n\r\n    const s_d1 = Math.max(1, vase.d1 * scale_factor)\r\n    const s_d1_h = (vase.d1_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    const s_d2 = Math.max(1, vase.d2 * scale_factor)\r\n    const s_d2_h = (vase.d2_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    const s_d3 = Math.max(1,vase.d3 * scale_factor)\r\n    const s_d3_h = (vase.d3_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let bottom_disk_mesh = <mesh />\r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const dtop_marker = vase.top_rim ? getInputMarker((s_dtop/2) + 0.6, s_dtop_h) : getInputMarker((s_dtop/2) + 0.1, s_dtop_h) \r\n    const dbottom_marker = vase.bottom_rim ? getInputMarker((s_dbottom/2) + 0.6, s_dbottom_h) : getInputMarker((s_dbottom/2) + 0.1, s_dbottom_h)\r\n    const d1_marker = getInputMarker((s_d1/2) + 0.1, s_d1_h)\r\n    const d2_marker = getInputMarker((s_d2/2) + 0.1, s_d2_h)\r\n    const d3_marker = getInputMarker((s_d3/2) + 0.1, s_d3_h)\r\n\r\n    if (vase.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.1,0.4,10,50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n    if (vase.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.1, 0.4, 10, 50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n\r\n    const points = vase.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    if (vase.bottom_disk){\r\n        bottom_disk_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial  map={texture} />\r\n        </mesh>\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-550)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,40)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,0,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {vase.top_rim && top_rim_mesh}\r\n            {vase.bottom_rim && bottom_rim_mesh}\r\n            {vase.bottom_disk && bottom_disk_mesh}\r\n            {dbottom_marker}\r\n            {d1_marker}\r\n            {d2_marker}\r\n            {d3_marker}\r\n            {dtop_marker}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Vase);","import React, {useEffect} from \"react\";\r\n\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Vase from \"../components/Vase\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst CreateVase = () => {\r\n\r\n  const { vaseStore, coloringFormStore} = useStores();\r\n  coloringFormStore.setModel(\"vase\")\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  function MultiHandle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    if (id == \"$$-0\" || id == \"$$-4\"){\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 2,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 3,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n          {...getHandleProps(id)}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 4, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  const sliderHeight = <Slider rootStyle={sliderStyle} domain={[10, 100]} step={1} mode={2} values={[vaseStore.height]} onUpdate={(val) => vaseStore.update_height(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_dtop = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.dtop]} onUpdate={(val) => vaseStore.update_dtop(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d3 = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.d3]} onUpdate={(val) => vaseStore.update_d3(val[0])} >\r\n    <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d2 = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.d2]} onUpdate={(val) => vaseStore.update_d2(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d1 = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.d1]} onUpdate={(val) => vaseStore.update_d1(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_dbottom = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.dbottom]} onUpdate={(val) => vaseStore.update_dbottom(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const dSlider = <Slider\r\n  rootStyle={sliderStyle}\r\n  domain={[0, 100]}\r\n  mode={2}\r\n  values={[0, vaseStore.d1_h, vaseStore.d2_h, vaseStore.d3_h, 100] /* three values = three handles */}\r\n  onUpdate={(val)=>vaseStore.update_d_heights(val)}\r\n  step={5}\r\n  >\r\n  <div style={railStyle} />\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <MultiHandle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n  \r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const top_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_top_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.top_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_bottom_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.bottom_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_disk_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_bottom_disk(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.bottom_disk ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={vaseStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 120], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '80%', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            {/* <ambientLight intensity={0} /> */}\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.3}/>\r\n            <spotLight position={[100, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n             {/* <spotLight position={[1, 10, 10]} angle={0.15} penumbra={1} /> */}\r\n            {/* <pointLight position={[-10, -10, -10]} /> */}\r\n            <Vase vase={vaseStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption\">\r\n            <br/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{background: '#FFE7E5', width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'left', marginBottom:30, marginLeft:25, marginTop:15}}>\r\n              <p className=\"text\">height</p>\r\n              {sliderHeight}\r\n              <p className=\"text\">2nd diameter</p>\r\n              {slider_d3}\r\n              <p className=\"text\">4th diameter</p>\r\n              {slider_d1}\r\n            </div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'right', marginBottom:30, marginRight:30, marginTop:15}}>\r\n              <p className=\"text\">top diameter</p>\r\n              {slider_dtop}\r\n              <p className=\"text\">3rd diameter</p>\r\n              {slider_d2}\r\n              <p className=\"text\">bottom diameter</p>\r\n              {slider_dbottom}\r\n            </div>\r\n          </div>\r\n          <p className=\"text\">diameter heights ( % )</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {dSlider}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top rim</p>\r\n            {top_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom rim</p>\r\n            {bottom_rim_switch}\r\n          </div>\r\n          <div style={{float: 'right', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom cover</p>\r\n            {bottom_disk_switch}\r\n          </div>\r\n          <div style={{color:'#FFE7E5', marginTop: -10}}>.</div>\r\n          <div className=\"switch\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateVase);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Basket = (props) => {\r\n    const {basketStore} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []);\r\n\r\n    const s_dtop_h = basketStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = basketStore.scale_h/basketStore.height\r\n\r\n    const s_dtop = Math.max(1,basketStore.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,basketStore.dbottom * scale_factor)\r\n\r\n    const s_diameter = Math.max(1, basketStore.diameter * scale_factor)\r\n    const s_diameter_h = 0\r\n\r\n    // need rounded bottom shape , concave\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let handle = <mesh /> // handle options: 1 top, 2 sides, none \r\n    let lid = <mesh/> // true false\r\n    let side_handles = <mesh/>\r\n    let bottom_disk_mesh = <mesh />\r\n    let curved_bottom = <mesh />\r\n\r\n    if (basketStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.15,0.25,10,50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n    if (basketStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.15, 0.25, 10, 50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n\r\n    if (basketStore.top_handle){\r\n        const phi_len = Math.PI * 1\r\n        const theta_len = 0.1 * Math.PI\r\n        const theta_start = Math.PI * 0.45\r\n\r\n        handle = \r\n        <group>\r\n            <mesh position={[0,s_dtop_h,0]} rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,s_dtop_h,0]}  rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (!basketStore.curved_bottom){\r\n        bottom_disk_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial  map={texture} />\r\n        </mesh>\r\n    }\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = 0;\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = Math.cos(2 * Math.PI * t);\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n      }\r\n\r\n    if (basketStore.side_handles){\r\n        const tube_scale = s_dtop/5\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/10)\r\n        const rad_segs = 7\r\n        const closed = false\r\n\r\n        side_handles =  \r\n        <group>\r\n        <mesh position={[(-s_dtop/2)+(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(s_dtop/2)-(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.lid){\r\n        const lid_scale = 1\r\n        const percent_lid = 0.25\r\n        const rad_lid = (s_dtop * lid_scale/2) / Math.sin(Math.PI * percent_lid)\r\n        const lid_dist = s_dtop_h - (s_dtop* lid_scale/2) / Math.tan(Math.PI * percent_lid)\r\n        const deco_r = rad_lid/15\r\n        const deco_dist = lid_dist + rad_lid + deco_r - 0.2\r\n\r\n        lid = \r\n        <group>\r\n            <mesh position={[0,lid_dist+0.1,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,lid_dist,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            <mesh position={[0,deco_dist,0]}>\r\n                <sphereGeometry args={[deco_r, 20, 10]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.curved_bottom){\r\n        const percent_sphere = 0.2\r\n        const rad_bottom = (s_dbottom/2) / Math.sin(Math.PI * percent_sphere)\r\n        const bottom_dist = s_dbottom_h - (s_dbottom/2) / Math.tan(Math.PI * percent_sphere)\r\n\r\n        curved_bottom = <group>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide}/>\r\n        </mesh>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n    \r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const dtop_marker = basketStore.top_rim ? getInputMarker((s_dtop/2) + 0.5, s_dtop_h) : getInputMarker((s_dtop/2) + 0.1, s_dtop_h) \r\n    const dbottom_marker = basketStore.bottom_rim ? getInputMarker((s_dbottom/2) + 0.5, s_dbottom_h) : getInputMarker((s_dbottom/2) + 0.1, s_dbottom_h)\r\n    const diameter_marker = getInputMarker((s_diameter/2) + 0.1, s_diameter_h)\r\n\r\n    const points = basketStore.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-5,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {basketStore.lid && lid}\r\n            {basketStore.top_rim && top_rim_mesh}\r\n            {basketStore.bottom_rim && bottom_rim_mesh}\r\n            {diameter_marker}\r\n            {dtop_marker}\r\n            {dbottom_marker}\r\n            {basketStore.top_handle && handle}\r\n            {basketStore.side_handles && side_handles}\r\n            {!basketStore.curved_bottom && bottom_disk_mesh}\r\n            {basketStore.curved_bottom && curved_bottom}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Basket);","import React, {useEffect} from \"react\";\r\n\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Basket from \"../components/Basket\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst CreateBasket = () => {\r\n\r\n  const { basketStore, coloringFormStore} = useStores();\r\n  coloringFormStore.setModel(\"basket\")\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const sliderHeight = <Slider rootStyle={sliderStyle} domain={[10, 100]} step={1} mode={2} values={[basketStore.height]} onUpdate={(val) => basketStore.update_height(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[basketStore.diameter]} onUpdate={(val) => basketStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\n  const slider_dbottom = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[basketStore.dbottom]} onUpdate={(val) => basketStore.update_dbottom(val[0])} >\r\n  <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n  </Rail>\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <Handle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n\r\n  const slider_dtop = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[basketStore.dtop]} onUpdate={(val) => basketStore.update_dtop(val[0])} >\r\n  <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n  </Rail>\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <Handle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n  \r\n  const top_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_top_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.top_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_bottom_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.bottom_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const lid_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_lid(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.lid ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_curved_bottom(val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.curved_bottom ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n</div>\r\n\r\n  const top_handle_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_top_handle(val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.top_handle ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n\r\n  const side_handles_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_side_handles(val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.side_handles ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={basketStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: '690px'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 100], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '80%', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Basket basketStore={basketStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption\">\r\n            <br/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'left', marginBottom:30, marginLeft:25, marginTop:15}}>\r\n              <p className=\"text\">height</p>\r\n              {sliderHeight}\r\n              <p className=\"text\">top diameter</p>\r\n              {slider_dtop}\r\n            </div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'right', marginBottom:30, marginRight:30, marginTop:15}}>\r\n              <p className=\"text\">middle diameter</p>\r\n              {slider_diameter}\r\n              <p className=\"text\">bottom diameter</p>\r\n              {slider_dbottom}\r\n            </div>\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top rim</p>\r\n            {top_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">curved bottom</p>\r\n            {bottom_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom rim</p>\r\n            {bottom_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top handle</p>\r\n            {top_handle_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">lid</p>\r\n            {lid_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">side handles</p>\r\n            {side_handles_switch}\r\n          </div>\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateBasket);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\nimport Wing from \"../Wing\"\r\n\r\nconst Figurine = (props) => {\r\n    const {figStore} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []) \r\n\r\n    const s_diameter = figStore.diameter \r\n    const s_diameter_h = 0\r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const theta_len = 0.8\r\n    const goal_rad = (figStore.diameter * figStore.body_scale)/2\r\n    const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n    const offset = head_rad*Math.cos((1-theta_len) * Math.PI) - 0.2\r\n\r\n    const head =\r\n    <group>\r\n        <mesh position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n            <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n        </mesh>\r\n        <mesh position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n            <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.BackSide}/>\r\n        </mesh>\r\n    </group>\r\n\r\n    let bunny_ears = <mesh/>\r\n    let cat_ears = <mesh/> \r\n    let sphere_ears = <mesh/>\r\n    let bear_ears = <mesh/>\r\n    let arms = <mesh/>\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = Math.cos(2 * Math.PI * t);\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = 0;\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n    }\r\n\r\n    if(figStore.ears == \"bear\"){\r\n        const tube_scale = head_rad/3\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/7)\r\n        const rad_segs = 7\r\n        const closed = false\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + tube_scale/4 + (head_rad * Math.cos(Math.PI/4))\r\n\r\n        bear_ears =  \r\n        <group>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,Math.PI/4]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map={texture} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial  map={texture} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears == \"cat\"){\r\n        const shape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/1.5)/2\r\n        shape.moveTo(-half_side_len,0);\r\n        shape.quadraticCurveTo(-half_side_len/1.2, half_side_len * 1.3, 0,half_side_len * 1.8);\r\n        shape.quadraticCurveTo(half_side_len/1.2, half_side_len * 1.3, half_side_len,0);\r\n        shape.lineTo(-half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        cat_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n\r\n    }\r\n\r\n    if(figStore.ears == \"bunny\"){\r\n        const bshape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/2)/2\r\n        bshape.moveTo(-half_side_len,0);\r\n        bshape.lineTo(-half_side_len, half_side_len * 3)\r\n        bshape.quadraticCurveTo(-half_side_len/2, (half_side_len * 4), 0,half_side_len * 4);\r\n        bshape.quadraticCurveTo(half_side_len/2, half_side_len * 4, half_side_len, half_side_len * 3);\r\n        bshape.lineTo(half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        bunny_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears == \"sphere\"){\r\n        const ear_rad = head_rad/3.5\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + ear_rad + (head_rad * Math.cos(Math.PI/4))\r\n        sphere_ears = \r\n        <group>\r\n            <mesh position={[-(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (figStore.arms){\r\n        const arm_rad = figStore.diameter/7\r\n        const y_pos = (figStore.diameter * figStore.body_height)/2\r\n        const x_pos = (figStore.diameter * figStore.body_scale)/2 + arm_rad*1.3\r\n        arms = \r\n        <group>\r\n            <mesh position={[-(x_pos),y_pos,0]} rotation={[0,0,Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[x_pos,y_pos,0]} rotation={[0,0,-Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    const points = figStore.updateCurvedPts()\r\n    const diameter_marker = getInputMarker((s_diameter/2) + 0.1, s_diameter_h)\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {head}\r\n            {diameter_marker}\r\n            {figStore.ears == \"bear\" && bear_ears}\r\n            {figStore.ears == \"bunny\" && bunny_ears}\r\n            {figStore.ears == \"cat\" && cat_ears}\r\n            {figStore.ears == \"sphere\" && sphere_ears}\r\n            {figStore.arms && arms}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Figurine);","import React, {useEffect} from \"react\";\r\n\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Figurine from \"../components/Figurine\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\n\r\nconst CreateFigurine = () => {\r\n\r\n  const { figStore, coloringFormStore} = useStores();\r\n  coloringFormStore.setModel(\"fig\")\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const ears_options = [\r\n    {\r\n        label: \"◠ ◠\",\r\n        value: \"bear\",\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"〇 〇\",\r\n        value: \"sphere\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },  {\r\n        label: \"∧ ∧\",\r\n        value: \"cat\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },  {\r\n        label: \"∩ ∩\",\r\n        value: \"bunny\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },\r\n  ];\r\n\r\n  const ears = [\"bear\", \"sphere\", \"cat\", \"bunny\"]\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n    \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[1, 50]} step={1} mode={2} values={[figStore.diameter]} onUpdate={(val) => figStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n\r\n  const arms_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => figStore.update_arms(val)}\r\n      options={options}\r\n      initialSelectedIndex={figStore.arms ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n\r\n  \r\nconst ears_switch = <div className=\"switch\"  style={{width: 360, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => figStore.update_ears(val)}\r\n    options={ears_options}\r\n    initialSelectedIndex={ears.indexOf(`${figStore.ears}`)}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n    fontSize={20}\r\n/>\r\n</div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => figStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={figStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 80], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '470px', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Figurine figStore={figStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption-fig\">\r\n            <div style={{height: 13}}/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 13}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <br/>\r\n          <p className=\"text\">body diameter</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {slider_diameter}\r\n          </div>\r\n          <br/>\r\n          <p className=\"text\">arms</p>\r\n          {arms_switch}\r\n          <br/>\r\n          <p className=\"text\">ears</p>\r\n          {ears_switch}\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateFigurine);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ResultVase = (props) => {\r\n    const {vaseStore} = props\r\n    const itemsRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, vaseStore.modelDimensions.length);\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = vaseStore.modelDimensions.length\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(vaseStore.textures[len-i-1])\r\n            // console.log(vaseStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n\r\n    const s_dtop_h = vaseStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = vaseStore.scale_h/vaseStore.height\r\n\r\n    const s_dtop = vaseStore.dtop * scale_factor\r\n    const s_dbottom = vaseStore.dbottom * scale_factor\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let bottom_disk_mesh = <mesh />\r\n\r\n    if (vaseStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.1,0.4,10,50]}/>\r\n        <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n    if (vaseStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.1, 0.4, 10, 50]}/>\r\n        <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    const points = useMemo(() => vaseStore.updateCurvedPts(true), [vaseStore.cm]);\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    if (vaseStore.bottom_disk){\r\n        bottom_disk_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-550)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,40)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,0,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            {points.map((_, i) => (\r\n            <group key={i}>\r\n                <mesh >\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n                </mesh>\r\n                <mesh>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshLambertMaterial color={vaseStore.default_color} side = {THREE.BackSide} />\r\n                </mesh>\r\n            </group>   \r\n            ))}\r\n            {vaseStore.top_rim && top_rim_mesh}\r\n            {vaseStore.bottom_rim && bottom_rim_mesh}\r\n            {vaseStore.bottom_disk && bottom_disk_mesh}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(ResultVase);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst Figurine = (props) => {\r\n    const {figStore} = props\r\n    const itemsRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, figStore.modelDimensions.length-1);\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = figStore.modelDimensions.length-1\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(figStore.textures[i])\r\n            // console.log(figStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n    const texture_body = useMemo(() => new THREE.TextureLoader().load(figStore.textures[figStore.textures.length-1]), []) \r\n\r\n    const theta_len = 0.8\r\n    const goal_rad = (figStore.diameter * figStore.body_scale)/2\r\n    const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n    const offset = head_rad*Math.cos((1-theta_len) * Math.PI) - 0.2\r\n\r\n    // const head =\r\n    // <group>\r\n    //     <mesh position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n    //         <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n    //         <meshPhongMaterial map = {texture_body}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n    //     </mesh>\r\n    //     <mesh position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n    //         <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n    //         <meshPhongMaterial map = {texture_body}  side={THREE.BackSide}/>\r\n    //     </mesh>\r\n    // </group>\r\n\r\n    const divs = figStore.getBrokenHeadPts(Math.PI*theta_len)\r\n\r\n    const broken_head = \r\n    divs.map((_, i) => (\r\n        <group key={i}>\r\n            <mesh position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n                <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, divs[i][0], divs[i][1]]}/>\r\n                <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n                <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, divs[i][0], divs[i][1]]}/>\r\n                <meshPhongMaterial color={figStore.default_color} side={THREE.BackSide}/>\r\n            </mesh>\r\n        </group>  \r\n    ))\r\n    \r\n    let bunny_ears = <mesh/>\r\n    let cat_ears = <mesh/> \r\n    let sphere_ears = <mesh/>\r\n    let bear_ears = <mesh/>\r\n    let arms = <mesh/>\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = Math.cos(2 * Math.PI * t);\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = 0;\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n    }\r\n\r\n    if(figStore.ears == \"bear\"){\r\n        const tube_scale = head_rad/3\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/7)\r\n        const rad_segs = 7\r\n        const closed = false\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + tube_scale/4 + (head_rad * Math.cos(Math.PI/4))\r\n\r\n        bear_ears =  \r\n        <group>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,Math.PI/4]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={figStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial  color={figStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears == \"cat\"){\r\n        const shape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/1.5)/2\r\n        shape.moveTo(-half_side_len,0);\r\n        shape.quadraticCurveTo(-half_side_len/1.2, half_side_len * 1.3, 0,half_side_len * 1.8);\r\n        shape.quadraticCurveTo(half_side_len/1.2, half_side_len * 1.3, half_side_len,0);\r\n        shape.lineTo(-half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        cat_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n\r\n    }\r\n\r\n    if(figStore.ears == \"bunny\"){\r\n        const bshape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/2)/2\r\n        bshape.moveTo(-half_side_len,0);\r\n        bshape.lineTo(-half_side_len, half_side_len * 3)\r\n        bshape.quadraticCurveTo(-half_side_len/2, (half_side_len * 4), 0,half_side_len * 4);\r\n        bshape.quadraticCurveTo(half_side_len/2, half_side_len * 4, half_side_len, half_side_len * 3);\r\n        bshape.lineTo(half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        bunny_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears == \"sphere\"){\r\n        const ear_rad = head_rad/3.5\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + ear_rad + (head_rad * Math.cos(Math.PI/4))\r\n        sphere_ears = \r\n        <group>\r\n            <mesh position={[-(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (figStore.arms){\r\n        const arm_rad = figStore.diameter/7\r\n        const y_pos = (figStore.diameter * figStore.body_height)/2\r\n        const x_pos = (figStore.diameter * figStore.body_scale)/2 + arm_rad*1.3\r\n        arms = \r\n        <group>\r\n            <mesh position={[-(x_pos),y_pos,0]} rotation={[0,0,Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[x_pos,y_pos,0]} rotation={[0,0,-Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    const points = figStore.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture_body}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture_body}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {broken_head}\r\n            {figStore.ears == \"bear\" && bear_ears}\r\n            {figStore.ears == \"bunny\" && bunny_ears}\r\n            {figStore.ears == \"cat\" && cat_ears}\r\n            {figStore.ears == \"sphere\" && sphere_ears}\r\n            {figStore.arms && arms}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Figurine);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ResultBasket = (props) => {\r\n    const {basketStore} = props\r\n    const itemsRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, basketStore.modelDimensions.length);\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = basketStore.modelDimensions.length\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(basketStore.textures[len-i-1])\r\n            // console.log(basketStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n    const s_dtop_h = basketStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = basketStore.scale_h/basketStore.height\r\n\r\n    const s_dtop = Math.max(1,basketStore.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,basketStore.dbottom * scale_factor)\r\n\r\n    const s_diameter = Math.max(1, basketStore.diameter * scale_factor)\r\n    const s_diameter_h = 0\r\n\r\n    // need rounded bottom shape , concave\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let handle = <mesh /> // handle options: 1 top, 2 sides, none \r\n    let lid = <mesh/> // true false\r\n    let side_handles = <mesh/>\r\n    let bottom_disk_mesh = <mesh />\r\n    let curved_bottom = <mesh />\r\n\r\n    if (basketStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.15,0.25,10,50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n    if (basketStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.15, 0.25, 10, 50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    if (basketStore.top_handle){\r\n        const phi_len = Math.PI * 1\r\n        const theta_len = 0.1 * Math.PI\r\n        const theta_start = Math.PI * 0.45\r\n\r\n        handle = \r\n        <group>\r\n            <mesh position={[0,s_dtop_h,0]} rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,s_dtop_h,0]}  rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (!basketStore.curved_bottom){\r\n        bottom_disk_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = 0;\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = Math.cos(2 * Math.PI * t);\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n      }\r\n\r\n    if (basketStore.side_handles){\r\n        const tube_scale = s_dtop/5\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/10)\r\n        const rad_segs = 7\r\n        const closed = false\r\n\r\n        side_handles =  \r\n        <group>\r\n        <mesh position={[(-s_dtop/2)+(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(s_dtop/2)-(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.lid){\r\n        const lid_scale = 1\r\n        const percent_lid = 0.25\r\n        const rad_lid = (s_dtop * lid_scale/2) / Math.sin(Math.PI * percent_lid)\r\n        const lid_dist = s_dtop_h - (s_dtop* lid_scale/2) / Math.tan(Math.PI * percent_lid)\r\n        const deco_r = rad_lid/15\r\n        const deco_dist = lid_dist + rad_lid + deco_r - 0.2\r\n\r\n        lid = \r\n        <group>\r\n            <mesh position={[0,lid_dist+0.1,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,lid_dist,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n            <mesh position={[0,deco_dist,0]}>\r\n                <sphereGeometry args={[deco_r, 20, 10]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.curved_bottom){\r\n        const percent_sphere = 0.2\r\n        const rad_bottom = (s_dbottom/2) / Math.sin(Math.PI * percent_sphere)\r\n        const bottom_dist = s_dbottom_h - (s_dbottom/2) / Math.tan(Math.PI * percent_sphere)\r\n\r\n        curved_bottom = <group>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side={THREE.FrontSide}/>\r\n        </mesh>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    // const points = basketStore.updateCurvedPts()\r\n    const points = useMemo(() => basketStore.updateCurvedPts(true), [basketStore.cm]);\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-5,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            {points.map((_, i) => (\r\n            <group key={i}>\r\n                <mesh >\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n                </mesh>\r\n                <mesh>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshLambertMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n                </mesh>\r\n            </group>   \r\n            ))}\r\n            {basketStore.lid && lid}\r\n            {basketStore.top_rim && top_rim_mesh}\r\n            {basketStore.bottom_rim && bottom_rim_mesh}\r\n            {basketStore.top_handle && handle}\r\n            {basketStore.side_handles && side_handles}\r\n            {!basketStore.curved_bottom && bottom_disk_mesh}\r\n            {basketStore.curved_bottom && curved_bottom}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(ResultBasket);","export default __webpack_public_path__ + \"static/media/upper-banner.1523f22e.png\";","export default __webpack_public_path__ + \"static/media/lower-banner.94f2cf86.png\";","import React, {useEffect, useRef} from 'react';\r\nimport {useStores} from \"../models/RootStoreContext\"\r\nimport { observer } from \"mobx-react\";\r\nimport  ResultVase  from \"../components/ResultVase\"\r\nimport  Swan  from \"../components/Swan\"\r\nimport  ResultFigurine  from \"../components/ResultFigurine\"\r\nimport  ResultBasket  from \"../components/ResultBasket\"\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport './create-vase.css'\r\nimport upperbanner from \"../assets/upper-banner.png\"\r\nimport lowerbanner from \"../assets/lower-banner.png\"\r\nimport { FiDownload } from \"react-icons/fi\";\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst Result = () => {\r\n  const {coloringFormStore, vaseStore, swanStore, basketStore, figStore} = useStores()\r\n  const model = coloringFormStore.model; \r\n  \r\n  const canvasRef = useRef()\r\n  let modelStore; \r\n  if (coloringFormStore.model == \"vase\") modelStore = vaseStore\r\n  if (coloringFormStore.model == \"swan\") modelStore = swanStore\r\n  else if (coloringFormStore.model == \"fig\") modelStore = figStore\r\n  else if (coloringFormStore.model == \"basket\") modelStore = basketStore\r\n  modelStore.setDefaultColor(coloringFormStore.defaultColor)\r\n  console.log(modelStore.default_color)\r\n  \r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext(\"2d\")\r\n    // console.log(coloringFormStore.coloringFormData)\r\n    // console.log(coloringFormStore.coloringFormData[0].drawingSectionData[0].rowData[0].pixelColor)\r\n    // console.log(\"Num sections\", coloringFormStore.coloringFormData.length)\r\n    const px_size = 20\r\n    const half_px_width = px_size/2\r\n    const defaultCol = coloringFormStore.defaultColor;\r\n\r\n    for (let i = 0; i < coloringFormStore.coloringFormData.length; i++){\r\n      const sec_width = modelStore.modelDimensions[i][0]\r\n      const sec_height = modelStore.modelDimensions[i][1] \r\n      canvas.width = sec_width * px_size\r\n      canvas.height = sec_height * px_size\r\n      context.fillStyle = defaultCol\r\n      context.fillRect(0, 0, canvas.width, canvas.height);\r\n      for (let r = 0; r < sec_height; r++){\r\n        let offset = 0 \r\n        if (coloringFormStore.coloringFormData[i].drawingSectionData[r].offset){\r\n          offset = half_px_width\r\n          const last_idx = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData.length\r\n          context.fillStyle = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[last_idx-1].pixelColor\r\n          context.fillRect(0, px_size * r, half_px_width, px_size)\r\n        }\r\n        for (let c = 0; c < sec_width; c++){\r\n          if (coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[c].pixelColor == defaultCol) continue\r\n          context.fillStyle = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[c].pixelColor\r\n          context.fillRect((px_size * c) + offset, px_size * r, px_size, px_size)\r\n        }\r\n      }\r\n      var texture = canvas.toDataURL(\"image/png\", 1.0)\r\n      modelStore.storePic(texture)\r\n    }\r\n  }, [])\r\n\r\n  // const modelRef = useRef()  \r\n\r\n  return (\r\n    // <canvas ref={canvasRef}/> // to test texture generation\r\n    <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: '600px'}}>\r\n      <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '52%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 95], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: \"80%\", borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {0.8}/>\r\n            <spotLight position={[100, 25, 90]} intensity = {0.8}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.3} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.1} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.1} />\r\n            {coloringFormStore.model == \"vase\" && <ResultVase vaseStore={vaseStore} />}\r\n            {coloringFormStore.model == \"swan\" && <Swan swanStore={swanStore} result={true}/>}\r\n            {coloringFormStore.model == \"fig\" && <ResultFigurine figStore={figStore}/>}\r\n            {coloringFormStore.model == \"basket\" && <ResultBasket basketStore={basketStore} />}\r\n          </Canvas>\r\n        <div className=\"containerCaption\">\r\n            <div style={{height: 10}}></div>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 10}}></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"containerRight\" style={{width: '48%', height: \"100%\", overflow: 'visible', float:'right', alignItems:\"center\", justifyContent:\"center\", position: \"relative\"}}>\r\n        <canvas style={{display:\"none\"}} ref={canvasRef}/>\r\n        <img src={upperbanner} className=\"banner\" style={{marginTop: 2}}/>\r\n        <div className = \"done-button\"\r\n          onClick={() => coloringFormStore.saveDiagram()}> \r\n          <p className = \"download-label\"><span><FiDownload size={20}/></span> download 3d-o diagram <span><FiDownload size={20}/></span></p>\r\n        </div>\r\n        {/* <div className = \"done-button\"\r\n          onClick={() => coloringFormStore.saveDiagram()}> \r\n          <p className = \"download-label\"><span><FiDownload size={20}/></span> download 3d model <span><FiDownload size={20}/></span></p>\r\n        </div> */}\r\n        <img src={lowerbanner} className=\"banner-b\"  />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Result);","import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\n\r\nimport Landing from './landing';\r\nimport About from './about';\r\nimport Learn from './learn';\r\nimport Contact from './contact';\r\nimport Create from './create';\r\nimport Gallery from './gallery';\r\nimport Browse from './browse';\r\nimport CreateSwan from \"./create-swan\"\r\nimport CreateVase from \"./create-vase\"\r\nimport CreateBasket from \"./create-basket\"\r\nimport CreateFigurine from \"./create-figurine\"\r\nimport Result from \"./result\"\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n  <div className=\"Background\">\r\n    <div className=\"InnerApp\"> \r\n      <Navbar/>\r\n      <Switch>\r\n        <Route path='/about' component={About} />\r\n        <Route path='/create' component={Create} />\r\n        <Route path='/learn' component={Learn} />\r\n        <Route path='/contact' component={Contact} />\r\n        <Route path='/gallery' component={Gallery} />\r\n        <Route path='/browse' component={Browse} />\r\n        <Route path='/create-swan' component={CreateSwan} />\r\n        <Route path='/create-vase' component={CreateVase} />\r\n        <Route path='/create-basket' component={CreateBasket} />\r\n        <Route path='/create-figurine' component={CreateFigurine} />\r\n        <Route path='/Result' component={Result} />\r\n        <Route path='/' component={Landing}/>\r\n      </Switch>\r\n    </div>\r\n    <p style={{marginBottom: 30, marginTop: 20, letterSpacing: 1.5, color: \"#E33937\", fontSize:13}}>lina nguyen 🍓 2021</p>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState, useRef} from \"react\";\r\nimport \"./pixel.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst Pixel = (props) => {\r\n  const {formObject, PxModel} = props;\r\n\r\n  // const [PxModel.pixelColor, PxModel.setPixelColor] = useState(\"#FFFFFF\");\r\n  // const [PxModel.oldColor, PxModel.setOldColor] = useState(PxModel.pixelColor);\r\n  // const [PxModel.canChangeColor, PxModel.setCanChangeColor] = useState(true);\r\n\r\n  function borderColor(defaultColor) {\r\n    var color = defaultColor.substring(2, 8);\r\n    var r = parseInt(color.substring(0, 2), 16); // hexToR\r\n    var g = parseInt(color.substring(2, 4), 16); // hexToG\r\n    var b = parseInt(color.substring(4, 6), 16); // hexToB\r\n    return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 90) ?\r\n      \"#000000\" : \"#FFFFFF\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(formObject.clear) {\r\n      PxModel.setPixelColor(formObject.defaultColor)\r\n    }\r\n    else if (PxModel.pixelColor == formObject.oldDefault) PxModel.setPixelColor(formObject.defaultColor)\r\n  }, [formObject.defaultColor])\r\n\r\n\r\n  function applyColor() {\r\n    formObject.unsetClear();\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n    PxModel.setCanChangeColor(false);\r\n  }\r\n\r\n  function applyColorSpray() {\r\n    if (formObject.mode){\r\n      applyColor()\r\n    }\r\n  }\r\n\r\n  function changeColorOnHover() {\r\n    PxModel.setOldColor(PxModel.pixelColor);\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n  }\r\n\r\n  function resetColor() {\r\n    if (PxModel.canChangeColor) {\r\n      PxModel.setPixelColor(PxModel.oldColor);\r\n    }\r\n\r\n    PxModel.setCanChangeColor(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pixel\"\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onMouseOver={applyColorSpray}\r\n      style={{ background: PxModel.pixelColor, borderColor: borderColor(formObject.defaultColor), borderWidth: 0.5}}\r\n    ></div>\r\n  );\r\n\r\n}\r\n\r\nexport default observer(Pixel);","import React, { useState } from \"react\";\r\nimport \"./specialPixel.css\";\r\n\r\nexport default function SpecialPixel(props) {\r\n  const {on, num, markerNum, displayRowNum, rounded} = props;\r\n\r\n  if (on){\r\n    if (markerNum){\r\n      return (\r\n        <div\r\n          className=\"specialPixelOn\"\r\n        ><p style={{marginTop: -4, fontSize: 10, marginLeft: -1.1, position:'absolute', background: \"#FF6C7B\", paddingLeft: 2.5, paddingRight:2.5, borderRadius:6, color:\"white\"}}> {markerNum}</p></div>\r\n      );\r\n    } else {\r\n      if (rounded){\r\n        return (\r\n          <div className=\"roundedRight\"\r\n          ></div>\r\n        );\r\n      }\r\n      else{\r\n        return (\r\n          <div className=\"specialPixelOn\"\r\n          ></div>\r\n        );\r\n      }\r\n    }\r\n  } \r\n  else {\r\n    if (displayRowNum){\r\n      return (\r\n        <div\r\n          className=\"rowMarkerPixel\"\r\n        >\r\n          <p style={{fontSize:9, marginLeft: 5, marginTop:0, position:'absolute'}}>{displayRowNum}</p>\r\n          </div>\r\n      );\r\n    }\r\n    else{\r\n      return (\r\n        <div\r\n          className=\"specialPixelOff\"\r\n        >\r\n          <p style={{fontSize:10, marginLeft: 4, marginTop: -4, position:'absolute'}}>{num}</p>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n}","import React, {useEffect} from \"react\";\r\nimport \"./row.css\";\r\nimport Pixel from \"../Pixel\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nconst Row = (props) => {\r\n  const {formObject, RowModel} = props;\r\n  let pixels = [];\r\n\r\n  pixels.push(<SpecialPixel key={-1} on={false} displayRowNum={RowModel.displayRowNum} />)\r\n\r\n  if (RowModel.rowData.length == 0){\r\n    for (let i = 0; i < RowModel.width; i++) {\r\n      RowModel.addPx()\r\n    }\r\n  }\r\n  for (let i = 0; i < RowModel.width; i++) {\r\n    pixels.push(<Pixel key={i} formObject={formObject} PxModel={RowModel.rowData[i]}/>);\r\n  }\r\n\r\n  pixels.push(<SpecialPixel key={RowModel.width} on={false} displayRowNum={RowModel.displayRowNum} />)\r\n\r\n  return <div style={{marginLeft: RowModel.offset}} className=\"row\">{pixels}</div>;\r\n}\r\n\r\nexport default observer(Row)","import React from \"react\";\r\nimport \"./specialRow.css\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\n\r\nexport default function SpecialRow(props) {\r\n  const { width, offset, specialTop, specialBottom } = props;\r\n\r\n  let pixels = [];\r\n\r\n  const my_dict = specialBottom ? specialBottom : specialTop\r\n  let count = 0 \r\n\r\n  pixels.push(<SpecialPixel key={-1} on={false} num={\"\"}/>)\r\n\r\n  for (let i = 0; i < width; i++) {\r\n    if (i in my_dict){\r\n      if (my_dict[i] == 1){\r\n        count += 1\r\n        pixels.push(<SpecialPixel key={i} on={true} markerNum={count}/>);\r\n      }\r\n      else if (my_dict[i] == -1){\r\n        pixels.push(<SpecialPixel key={i} on={true} rounded={true}/>);\r\n      }\r\n      else if (i == width-1 && my_dict[i] == 0){\r\n        pixels[0] = <SpecialPixel key={i} on={true}/>\r\n      }\r\n      else{\r\n        pixels.push(<SpecialPixel key={i} on={true}/>);\r\n      }\r\n    }\r\n    else{\r\n        pixels.push(<SpecialPixel key={i} on={false} num = {i+1}/>);\r\n    }\r\n  }\r\n\r\n  return <div style={{marginLeft: offset}} className=\"specialRow\">{pixels}</div>;\r\n}","import React, { useEffect, useState, useRef} from \"react\";\r\nimport \"../Pixel/pixel.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedPixel = (props) => {\r\n  const {formObject} = props;\r\n\r\n  const [pixelColor, setPixelColor] = useState(\"#FFFFFF\");\r\n  const [oldColor, setOldColor] = useState(pixelColor);\r\n  const [canChangeColor, setCanChangeColor] = useState(true);\r\n\r\n  function borderColor(defaultColor) {\r\n    var color = defaultColor.substring(2, 8);\r\n    var r = parseInt(color.substring(0, 2), 16); // hexToR\r\n    var g = parseInt(color.substring(2, 4), 16); // hexToG\r\n    var b = parseInt(color.substring(4, 6), 16); // hexToB\r\n    return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 90) ?\r\n      \"#000000\" : \"#FFFFFF\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(formObject.clear) {\r\n      setPixelColor(formObject.defaultColor)\r\n    }\r\n    else if (pixelColor == formObject.oldDefault) setPixelColor(formObject.defaultColor)\r\n  }, [formObject.defaultColor])\r\n\r\n\r\n  function applyColor() {\r\n    formObject.unsetClear();\r\n    setPixelColor(formObject.selectedColor);\r\n    setCanChangeColor(false);\r\n  }\r\n\r\n  function applyColorSpray() {\r\n    if (formObject.mode){\r\n      applyColor()\r\n    }\r\n  }\r\n\r\n  function changeColorOnHover() {\r\n    setOldColor(pixelColor);\r\n    setPixelColor(formObject.selectedColor);\r\n  }\r\n\r\n  function resetColor() {\r\n    if (canChangeColor) {\r\n      setPixelColor(oldColor);\r\n    }\r\n\r\n    setCanChangeColor(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pixel\"\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onMouseOver={applyColorSpray}\r\n      style={{ background: pixelColor, width: 20, borderColor: borderColor(formObject.defaultColor), borderWidth: 0.5}}\r\n    ></div>\r\n  );\r\n\r\n}\r\n\r\nexport default observer(UntrackedPixel);","import React, {useEffect} from \"react\";\r\nimport \"../Row/row.css\";\r\nimport UntrackedPixel from \"../UntrackedPixel\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nconst UntrackedRow = (props) => {\r\n  const {formObject, numPx, offset, display} = props;\r\n  let pixels = [];\r\n\r\n  if(display) pixels.push(<SpecialPixel key={-1} on={false} displayRowNum={display}/>)\r\n\r\n  for (let i = 0; i < numPx; i++) {\r\n    pixels.push(<UntrackedPixel key={i} formObject={formObject} />);\r\n  }\r\n  \r\n  return <div style={{marginLeft: offset}} className=\"row\">{pixels}</div>;\r\n  \r\n}\r\n\r\nexport default observer(UntrackedRow)","  \r\nimport React, { useRef, useEffect } from \"react\";\r\nimport \"../DrawingSection/drawingSection.css\";\r\nimport UntrackedRow from \"../UntrackedRow\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst TriangleSection = (props) => {\r\n  const {width, formObject, elevation, firstRowDisplay} = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = [];\r\n  \r\n  // height = width \r\n  const px_width = 21 // 21 is the px width w border\r\n  for (let i = 0; i < width; i++) {\r\n    let var_offset = (0.5*(px_width)*(width-i-1))\r\n    let displayNum = elevation+width-i\r\n    if (!firstRowDisplay){\r\n      if (i < width - 1) var_offset = (0.5*(px_width)*(width-i-3))\r\n      else displayNum = false\r\n    }\r\n    rows.push(<UntrackedRow key={i} numPx={i+1} offset={var_offset} formObject={formObject} display={displayNum}/>);\r\n  }\r\n\r\n  return (\r\n    <div id=\"triangleSection\">\r\n      <div id=\"pixels\" ref={panelRef} style={{marginBottom: 0, marginLeft: 0, marginRight:0}}>\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(TriangleSection)","  \r\nimport React, { useRef, useEffect } from \"react\";\r\nimport \"./drawingSection.css\";\r\nimport Row from \"../Row\";\r\nimport SpecialRow from \"../SpecialRow\";\r\nimport TriangleSection from \"../TriangleSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst DrawingSection = (props) => {\r\n  const {specialTop, specialBottom, formObject, DrawingSectionModel} = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = []; \r\n  let swanUpper = [];\r\n\r\n  // TODO : unhardcode\r\n  const wing1 = <TriangleSection width={17} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true}/> \r\n  const wing2 = <TriangleSection width={17} formObject={formObject} elevation={DrawingSectionModel.height} /> \r\n  const chest = <TriangleSection width={5} formObject={formObject} elevation={DrawingSectionModel.height} />\r\n  const back = <TriangleSection width={4} formObject={formObject} elevation={DrawingSectionModel.height} />\r\n  swanUpper.push(wing1, chest, wing2, back)\r\n\r\n  const upper_offset = 0 + 10.5 // px size + half px\r\n\r\n  if (formObject.model != \"swan\") rows.push(<SpecialRow key={-1} offset={0} width={DrawingSectionModel.width} specialTop={specialTop} />)\r\n  \r\n  if(DrawingSectionModel.drawingSectionData.length == 0){\r\n    for (let i = 0; i < DrawingSectionModel.height; i++){\r\n      DrawingSectionModel.addRow()\r\n    }\r\n  }\r\n  for (let i = 0; i < DrawingSectionModel.height; i++) {\r\n    DrawingSectionModel.drawingSectionData[i].setWidth(DrawingSectionModel.width)\r\n    DrawingSectionModel.drawingSectionData[i].setDisplayRowNum(DrawingSectionModel.height-i)\r\n    if (i%2 == 1){\r\n      DrawingSectionModel.drawingSectionData[i].setOffset()\r\n      rows.push(<Row key={i} formObject={formObject} RowModel={DrawingSectionModel.drawingSectionData[i]}/>);\r\n    }\r\n    else{ \r\n      rows.push(<Row key={i} formObject={formObject} RowModel={DrawingSectionModel.drawingSectionData[i]}/>);\r\n    }\r\n  }\r\n  \r\n  if(DrawingSectionModel.increasing){\r\n    if (DrawingSectionModel.height%2 == 1){\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5*2} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    }\r\n  }\r\n  else{\r\n    if (DrawingSectionModel.height%2 == 1){\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={0} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    }\r\n  } \r\n\r\n  return (\r\n    <div id=\"drawingSection\" >\r\n      <div id=\"pixels\" ref={panelRef} style={{marginBottom: 10, marginLeft: 40, marginRight: 40}}>\r\n        {formObject.model == \"swan\" && <div style={{display:\"flex\", alignItems:\"flex-end\", marginLeft: upper_offset, marginBottom: 3, justifyContent:\"flex-start\"}}>\r\n          {swanUpper}\r\n        </div>}\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(DrawingSection)","import React, {useRef} from 'react';\r\nimport DrawingSection from \"../DrawingSection\";\r\nimport \"./OrigamiObject.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst OrigamiObject = (props) => {\r\n    const { dimensions, formObject} = props;\r\n  \r\n    const objectRef = useRef();\r\n\r\n    let increasing = []\r\n    let specialTop = []\r\n    let specialBottom = []\r\n\r\n    if (formObject.model == \"swan\"){\r\n      specialTop = Array(dimensions.length).fill({})\r\n      specialBottom = Array(dimensions.length).fill({})\r\n    }\r\n    else {\r\n      for (let i = dimensions.length-2; i >= 0; i--){\r\n        let sTopCurr = {}\r\n        let sBottomCurr = {}\r\n\r\n        const curr = dimensions[i+1][0]\r\n        const next = dimensions[i][0]\r\n        let diff = next-curr // number of pieces need to add or subtract \r\n\r\n        let distribute = 0 \r\n        let remainder = 0\r\n        let spacing = 0\r\n\r\n        if (diff > 0){ // increasing - 2 pcs per increase\r\n          sBottomCurr  = {0: 1, 1: 0, 2: -1}\r\n          distribute = curr - (2 * diff)// pieces left to distribute for spacing \r\n          remainder = distribute >= 0 ? distribute % diff : curr-diff\r\n          spacing = Math.floor(distribute/diff)\r\n          let spacing_arr = Array(diff).fill(spacing)\r\n          for (let i = 0; i < 2; i++){\r\n            let j = i\r\n            while (j < diff && remainder > 0){\r\n              spacing_arr[j] += 1 \r\n              remainder -= 1 \r\n              j += 2 \r\n            }\r\n          }\r\n          let i = 0 \r\n          let idx = 0 \r\n          while(i < diff){\r\n            sTopCurr[idx] = 1\r\n            sTopCurr[idx+1] = -1\r\n            idx += spacing_arr[i] + 2\r\n            i += 1 \r\n          }\r\n          let last_idx = 2\r\n          for (let i = 0; i < spacing_arr.length-1; i ++){\r\n            sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n            sBottomCurr[last_idx + spacing_arr[i] + 2] = 0\r\n            sBottomCurr[last_idx + spacing_arr[i] + 3] = -1\r\n            last_idx = last_idx + spacing_arr[i] + 3\r\n          }  \r\n          specialTop.unshift(sTopCurr)\r\n          specialBottom.unshift(sBottomCurr)    \r\n          increasing.unshift(true) \r\n        } \r\n        else { // decreasing \r\n          sBottomCurr = {0: 1, 1: -1}\r\n          diff = -1 * diff\r\n          distribute = curr - (3 * diff)\r\n          remainder = distribute % diff\r\n          spacing = Math.floor(distribute/diff)\r\n          let spacing_arr = Array(diff).fill(spacing)\r\n          for (let i = 0; i < 2; i++){\r\n            let j = i\r\n            while (j < diff && remainder > 0){\r\n              spacing_arr[j] += 1 \r\n              remainder -= 1 \r\n              j += 2 \r\n            }\r\n          }\r\n          let i = 0 \r\n          let idx = 0 \r\n          while(i < diff){\r\n            sTopCurr[idx] = 1\r\n            sTopCurr[idx+1] = 0\r\n            sTopCurr[idx+2] = -1\r\n            idx += spacing_arr[i] + 3\r\n            i += 1 \r\n          }\r\n          let last_idx = 1\r\n          for (let i = 0; i < spacing_arr.length-1; i ++){\r\n            sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n            sBottomCurr[last_idx + spacing_arr[i] + 2] = -1\r\n            last_idx = last_idx + spacing_arr[i] + 2\r\n          }  \r\n          specialTop.unshift(sTopCurr)\r\n          specialBottom.unshift(sBottomCurr)  \r\n          increasing.unshift(false)\r\n        }\r\n      }\r\n      if (formObject.model == \"fig\"){\r\n        specialTop[specialTop.length-1] = {}\r\n        specialBottom[specialBottom.length-1] = {}\r\n      } \r\n      specialTop.unshift({})\r\n      specialBottom.push({})\r\n      increasing.push(false)\r\n    }\r\n\r\n    let sections = [];\r\n  \r\n    if (formObject.coloringFormData.length == 0){\r\n      for (let i = 0; i < dimensions.length; i++) {\r\n        formObject.addDrawingSection()\r\n      }\r\n    }\r\n    for (let i = 0; i < dimensions.length; i++) {\r\n      formObject.coloringFormData[i].setWidthHeight(dimensions[i][0], dimensions[i][1])\r\n      formObject.coloringFormData[i].setIncreasing(increasing[i])\r\n      sections.push(<DrawingSection key={i} specialTop = {specialTop[i]} specialBottom = {specialBottom[i]} formObject={formObject} DrawingSectionModel={formObject.coloringFormData[i]} />);\r\n    }\r\n    return (\r\n      <div id=\"origamiObject\">\r\n        <div id=\"sections\" ref={objectRef}>\r\n          {sections}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(OrigamiObject)","import React, {useState, useRef} from 'react';\r\nimport { TwitterPicker } from \"react-color\";\r\nimport OrigamiObject from \"../components/OrigamiObject\";\r\nimport \"./colouringPage.css\";\r\nimport Sticky from 'react-stickynode';\r\nimport { observer } from \"mobx-react\";\r\nimport logo from \"../assets/complex-logo.png\"\r\nimport {PlainLink as Link} from '../components/Navbar/NavbarElements';\r\nimport { AiOutlineInfo } from \"react-icons/ai\";\r\nimport { FiTrash } from \"react-icons/fi\";\r\nimport { IoChevronForward, IoChevronBack } from \"react-icons/io5\";\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\nimport {useStores} from \"../models/RootStoreContext\"\r\nimport DelayLink from 'react-delay-link';\r\n\r\nconst Colouring = () => {\r\n  const [showInfo, setShowInfo] = useState(false);\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const [showPickerDefault, setShowPickerDefault] = useState(false);\r\n  const [colorPaletteIdx, setColorIdx] = useState(0);\r\n  const [dColorPaletteIdx, setDColorIdx] = useState(0);\r\n  const [colorPalette, setColorPalette] = useState(['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF']) \r\n  const [dColorPalette, setDColorPalette] = useState(['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF']) \r\n\r\n  const diagramRef = useRef();\r\n  const {coloringFormStore, vaseStore, swanStore, figStore, basketStore} = useStores();\r\n  let modelStore;\r\n  if (coloringFormStore.model == \"vase\") modelStore = vaseStore\r\n  if (coloringFormStore.model == \"swan\") modelStore = swanStore\r\n  else if (coloringFormStore.model == \"fig\") modelStore = figStore\r\n  else if (coloringFormStore.model == \"basket\") modelStore = basketStore\r\n\r\n  function changeColor(color) {\r\n    coloringFormStore.setColor(color.hex);\r\n    const search = (color.hex).toString().toUpperCase()\r\n    if (!colorPalette.includes(search)){\r\n      let new_palette = colorPalette\r\n      new_palette[colorPaletteIdx] = search\r\n      setColorPalette(new_palette)\r\n      const new_idx = (colorPaletteIdx + 1) % 10\r\n      setColorIdx(new_idx)\r\n    }\r\n  }\r\n\r\n  function changeDefaultColor(color) {\r\n    const search = (color.hex).toString().toUpperCase()\r\n    coloringFormStore.setDefaultColor(search);\r\n    if (!dColorPalette.includes(search)){\r\n      let new_palette = dColorPalette\r\n      new_palette[dColorPaletteIdx] = search\r\n      setDColorPalette(new_palette)\r\n      const new_idx = (dColorPaletteIdx + 1) % 10\r\n      setDColorIdx(new_idx)\r\n    }\r\n  }\r\n\r\n  const myDimensions = modelStore.getDimensions();\r\n  const absolute = coloringFormStore.maxWidth > 52 ? true : false \r\n\r\n  let myHeight = 0 \r\n  const myYMargin = 20\r\n  const px_y = 13\r\n  const px_border = 1\r\n  const marker_y = 20\r\n\r\n  for (let i = 0; i < myDimensions.length; i++){\r\n    const y = myDimensions[i][1]\r\n    myHeight += (y * (px_y + px_border)) + (1.5*myYMargin) + (2*marker_y)\r\n  }\r\n\r\n  myHeight = Math.max(window.innerHeight, myHeight)\r\n\r\n  const colorPicker = <div className = \"color-picker-object\">\r\n      <p className = \"label-big\">pixel color</p>\r\n      <div className = \"color-picker-cover\"\r\n        onClick={()=> setShowPicker(!showPicker)} \r\n        style={{background: coloringFormStore.selectedColor}}\r\n      >\r\n        <br />\r\n      </div>\r\n      <div className = \"color-picker-palette\">\r\n        {showPicker &&  <TwitterPicker colors={colorPalette} triangle=\"top-left\" color={coloringFormStore.selectedColor} onChangeComplete={changeColor} />}\r\n      </div>\r\n    </div>\r\n  \r\n  const defaultColorPicker = <div className = \"color-picker-object\">\r\n      <p className = \"label-big\">primary color</p>\r\n      <div className = \"color-picker-cover\"\r\n        onClick={() => setShowPickerDefault(!showPickerDefault)} \r\n        style={{background: coloringFormStore.defaultColor}}\r\n      >\r\n        <br />\r\n      </div>\r\n      <div className = \"color-picker-palette-d\" >\r\n        {showPickerDefault &&  <TwitterPicker colors={dColorPalette} triangle=\"top-left\" color={coloringFormStore.defaultColor} onChangeComplete={changeDefaultColor} />}\r\n      </div>\r\n    </div>\r\n\r\n  const paintByPixel = \r\n  <div className = \"mode-object\">\r\n    <div className = \"mode-button\"\r\n      onClick={() => coloringFormStore.setMode(false)}> \r\n      <p className = \"label-inside\">paint by pixel</p>\r\n    </div>\r\n  </div>\r\n\r\n  const sprayPaint = \r\n  <div className = \"mode-object\">\r\n    <div className = \"mode-button\"\r\n      onClick={() => coloringFormStore.setMode(true)}> \r\n      <p className = \"label-inside\">spray paint</p>\r\n    </div>\r\n  </div>\r\n\r\n  const logoObject = <div className = \"logo-object\">\r\n    <p className = \"label\" >3d-o</p>\r\n    <img className = \"logo\" src={logo} onClick={() => exportComponentAsPNG(diagramRef, {fileName: \"my-3do-diagram\"})} alt=\"\"/>\r\n    {showInfo && <div className=\"info-popup\">info here</div>}\r\n  </div>  \r\n\r\n  const backButton = \r\n  <div className = \"back\">\r\n    <div className = \"nav\" onClick={() => console.log(\"hi\")}> \r\n      <IoChevronBack size={25} style={{color: 'white'}}/>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  const nextButton = \r\n  <div className = \"next\">\r\n    <DelayLink delay={0} to=\"/result\" clickAction={nextPage} replace={false}>\r\n      <div className = \"nav\"> \r\n          <IoChevronForward size={25} style={{color: 'white'}}/>\r\n      </div>\r\n    </DelayLink>\r\n  </div>\r\n\r\n  function nextPage(){\r\n    coloringFormStore.exportComponent(diagramRef)\r\n  }\r\n\r\n  const clear = <div className = \"logo-object\">\r\n    <p className = \"label\">clear</p>\r\n    <div className = \"icon\"\r\n      onClick={()=> coloringFormStore.clearAll()} >\r\n      <FiTrash  size={20} style={{color: 'white'}}/>\r\n      <br />\r\n    </div>\r\n  </div>\r\n\r\n  const info = <div className = \"logo-object\">\r\n  <p className = \"label\">info</p>\r\n  <div className = \"icon\"\r\n    onClick={()=> setShowInfo(!showInfo)} \r\n    >\r\n    <AiOutlineInfo size={23} style={{color: 'white'}}/>\r\n  </div>\r\n  </div>\r\n\r\n  const canvas = absolute? \r\n  <div ref = {diagramRef} className = \"canvas\">\r\n    <OrigamiObject \r\n      dimensions={myDimensions}  \r\n      formObject={coloringFormStore}\r\n    />\r\n  </div> : \r\n  <div ref = {diagramRef} className = \"canvas-relative\">\r\n    <OrigamiObject \r\n      dimensions={myDimensions}  \r\n      formObject={coloringFormStore}\r\n    />\r\n  </div>\r\n\r\n  return (\r\n    <div style={{background: \"#FFE7E5\"}}>\r\n      <Sticky innerZ={3}>\r\n        <div className = \"toolbar\">\r\n          {backButton}\r\n          {paintByPixel}\r\n          {clear}\r\n          {colorPicker}\r\n          {logoObject}\r\n          {defaultColorPicker}\r\n          {info}\r\n          {sprayPaint}\r\n          {nextButton}\r\n        </div>\r\n      </Sticky>\r\n      <div style={{position: 'relative', overflowX:'scroll', overflowY:'hidden', height: myHeight, background:\"#FFE7E5\"}}>\r\n        {canvas}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Colouring);","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport '../App.css'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Home from '../pages';\r\nimport Colouring from '../pages/colouring'\r\n// import makeInspectable from \"mobx-devtools-mst\";\r\nimport RootStore from \"../models/RootStore\";\r\nimport {RootStoreProvider} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst rootStore = RootStore.create()\r\n\r\n// makeInspectable(vase);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{background: \"#FFE7E5\"}}>\r\n        <RootStoreProvider value={rootStore}>\r\n          <Router>\r\n            <Switch>\r\n              <Route path='/colouring'>\r\n                <Colouring />\r\n              </Route>\r\n              <Route path='/'>\r\n                <Home/>\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </RootStoreProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}